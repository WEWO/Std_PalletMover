//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
#define OBJECTS_CONFIG

//Define part of class BusInterfaceSDIASInternal
#define BUSIF_INTERNAL_MAX_NR_DO 100

// Defines for Mutex Generation
#define INTERNAL_STR_MUTEX_NAME_SEPERATOR ".."
#define INTERNAL_MUTEX_NAME_END_LENGTH 5
#define INTERNAL_MUTEX_NAME_MAX_LENGTH 32
#include "..\..\Source\BusInterface.h"
#include "..\..\Source\interfaces\lsl_st_mt.h"
#include "..\..\Class\HwControl\HwControl.h"
#include "..\..\Source\interfaces\lsl_st_hardwaretree.h"
#include "..\..\Class\HwControl\watchdog.h"
#include "..\..\Source\interfaces\lsl_st_sysinfo.h"
#include "..\..\Source\interfaces\lsl_st_systrace.h"
#include "..\..\Class\HwControl\_HWKScope.h"
#include <.\lsl_st_mt.h>
//Define part of class SdiasBase
//Address to access the Dataobject list via SPI SDO Read
#define SDIAS_SPI_DATA_OBJECT_LIST_PAGE_ADDRESS               16#FFFF
#define SDIAS_SPI_DATA_OBJECT_LIST_PAGE_OFFSET                16#00
#define SDIAS_SPI_DATA_OBJECT_LIST_IDENTIFIER                 16#12345678

//Defines the number of optional list elements in the SPI List

#define SDIAS_SPI_NUMBER_OF_OPTIONAL_ELEMENTS                 16   

#define SDIAS_SPI_HEADER_BEFORE_OPTIONAL_ELEMENTS             16#18
#define SDIAS_SPI_HARDWARE_VERSION_OFFSET                     16#C
#define SDIAS_SPI_VENDOR_ID_OFFSET                            16#0

#define SDIAS_SPI_MASTER_ADRESS_TRANSMIT_BUFFER0              16#0000
#define SDIAS_SPI_MASTER_ADRESS_TRANSMIT_BUFFER1              16#0080
#define SDIAS_SPI_MASTER_ADRESS_RECEIVE_BUFFER0               16#0000
#define SDIAS_SPI_MASTER_ADRESS_RECEIVE_BUFFER1               16#0080
#define SDIAS_SPI_MASTER_ADRESS_PAGE_ADRESS                   16#0100
#define SDIAS_SPI_MASTER_ADRESS_PREDEFINED_COMMAND_REGISTER   16#0102
#define SDIAS_SPI_MASTER_ADRESS_SINGLE_COMMAND_REGISTER       16#0103
#define SDIAS_SPI_MASTER_ADRESS_STATUS_REGISTER               16#0104
#define SDIAS_SPI_MASTER_ADRESS_REQUEST_REGISTER              16#0105
#define SDIAS_SPI_MASTER_ADRESS_GRANT_REGISTER                16#0106
#define SDIAS_SPI_MASTER_ADRESS_CLEAR_REQUEST_REGISTER        16#0107
#define SDIAS_SPI_MASTER_ADRESS_FEATURE_REGISTER              16#0108

#define SDIAS_SPI_MASTER_SOFTWARE_REQUEST                     1

#define SDIAS_SPI_MASTER_COMMAND_PAGE_READ                    16#01
#define SDIAS_SPI_MASTER_COMMAND_PAGE_PROGRAM                 16#02
#define SDIAS_SPI_MASTER_COMMAND_SECTOR_ERASE                 16#03
#define SDIAS_SPI_MASTER_COMMAND_REBOOT_FPGA                  16#F0

#define SDIAS_SPI_MASTER_STATE_BUSY                           16#00
#define SDIAS_SPI_MASTER_STATE_READY                          16#01

#define SDIAS_SPI_SECTOR_SIZE                                 65536 // 256*256
#define SDIAS_SPI_PAGE_SIZE                                   256

#define SDIAS_SPI_WRITE_MAX_RETRIES                           2
#define SDIAS_SPI_TIMEOUT                                     500  //timeout for spi accesses
#define SDIAS_SPI_LOCK_TIMEOUT                                6   //this value is multiplied with the buscycletime [µs] (6*1000=6.000 msec timeout)


//SPI List IDs
#define SDIAS_SPI_IDENTIFICATION_LIST_ID  1
#define SDIAS_SPI_FLASH_CONFIGURATION_ID  2
#define SDIAS_SPI_VENDOR_NAME_ID          3
#define SDIAS_SPI_DEVICE_NAME_ID          4
#define SDIAS_SPI_SERIAL_NUMBER_ID        5
#define SDIAS_SPI_ORDERING_NUMBER_ID      6
#define SDIAS_SPI_DOCUMENTATION_PDF_ID    7
#define SDIAS_SPI_CALIB_DATA_ID           10
#define SDIAS_SPI_PDO_INFORMATION_ID      128

//SPI Access
#define SDIAS_SPI_ACCESS_ID_HW_TREE          1
#define SDIAS_SPI_ACCESS_ID_HWK_INTERNAL     2
#include "..\..\Class\SdiasManager\SdiasManager.h"
#include "..\..\Class\SdiasBase\SdiasBase.h"
//Define part of class PL221
#define DEVICE_ID_PL221 1091


#define PL221_ADDR_CONFIG_WRITE0      16#0000
#define PL221_ADDR_CONFIG_WRITE1      16#0080
#define PL221_ADDR_SEQUENZER_WRITE    16#0100
#define PL221_ADDR_PWMHIGHTIME_WRITE  16#0105
#define PL221_ADDR_STATEREG_READ      16#0107
#define PL221_ADDR_CONFIG_PIXEL_OUT   16#0110
#define PL221_PIXEL_LENGTH            16#0112

#define PL221_SDO_RESPONSE_TIMEOUT    (SDIAS_SDO_TIMEOUT *2)
#define PL221_SDO_RESPONSE_RETRYS     3

#define PL221_MAX_PWM_VALUE 100

//Data Transfer Time in ns
#define PL221_T0H_TYP0        420
#define PL221_T1H_TYP0        820
#define PL221_T0L_TYP0        820
#define PL221_T1L_TYP0        420
#define PL221_RESETTIME_TYP0  150

#define PL221_T0H_TYP1        380  
#define PL221_T1H_TYP1        880  
#define PL221_T0L_TYP1        880
#define PL221_T1L_TYP1        380
#define PL221_RESETTIME_TYP1  310

//scale the data transfer time in 20 ns 
#define PL221_SCALE 20
//maximum number of led strips
#define PL221_MAX_LED_STRIPES 2
//maximum bytes for SDO init
#define PL221_MAX_LED_DATA_BYTES 28
//last address in RAM used for color for whole stripe
#define PL221_LAST_RAM_ADDRESS 680
//Define part of class SafetyUDP
#define SAFETY_UDP_MAX_SOCKETS                6     // Max number of socket

#define SAFETY_UDP_CLT_SEND_OK                0    // Send ok
#define SAFETY_UDP_CLT_INVALID_HANDLE        -1    // Invalid handle
#define SAFETY_UDP_CLT_NOT_OPEN              -2    // Socket is not open
#define SAFETY_UDP_CLT_SEND_FAILED           -3    // Send failed
#define SAFETY_UDP_CLT_SEND_BUFFER_FULL      -4    // Send buffer is full
#define SAFETY_UDP_CLT_DATA_TO_BIG           -5    // Data to big

#define SAFETY_UDP_MAXIMUM_SEGMENT_SIZE    1452    // Maximum of user data

#define SAFETY_UDP_TIMEOUT_OPENSOCKET    (1000)    //timeout for opening socket

#define SAFETY_UDP_RECEIVE_TIMEOUT          800

#define SAFETY_UDP_TX_BUFFER_SIZE          1024
//Define part of class SafetyManager
#define LogBufferSize 1000
#include "..\..\Class\SafetyManager\SafetyManager.h"
#include "..\..\Source\interfaces\lsl_st_safetydll.h"
//Define part of class SdiasManager
#define SDIAS_SDO_MAX_LENGTH              128
#define SDIAS_SDO_RINGBUFFER_NO            64
#define SDIAS_SDO_CHANNEL_NO                3   // fixed in the VI hardware to be 3

// watchdog trigger interval (after 130ms of no trigger the SDIAS HW goes into reset again and takes at least another 10ms to be ready again)
#define SDIAS_WATCHDOG_TRIGGER_TIME        40

// time needed by sdias modules to start up after the watchdog is triggered the first time in ms
#define SDIAS_HARDWARE_STARTUP_TIME        15

// sdias manager needs 2 ticks to handle event for read task (measure sync time)
#define SDIAS_SYNC_MEASURE_TICKS            2

// after activating the PLL SyncOut it takes 3 cycles until the SDIAS sync can be injected
#define SDIAS_CYCLES_WAIT_AFTER_SYNC_ENABLE 3

// wait 1 bus cycle at start to get valid numbers in the task info
#define SDIAS_TASKINFO_READY_TICKS          1

// time to wait (in ms) until other tasks in the same or lower priority than post init have done their stuff
#define SDIAS_WAIT_TIME_IN_POST_INIT        1

#define SIZE_PER_SDIAS_CLIENT               16#0400

// for far memory accesses: 1 module can hold maximum 256 1K blocks (0-255)
#define SDIAS_1K_BLOCK_NO                       256

// far memory accesses maximum length in bytes
#define SDIAS_MAX_SIZE_FAR_MEM_ACCESS           127


#define SDIAS_OFFSET_HW_CONFIG              16#FF00
#define SDIAS_OFFSET_TASK_EVENT_IDS         16#FF10
#define SDIAS_OFFSET_FEATURE_INFO           16#FF18
#define SDIAS_OFFSET_APPLI_LED_STATES       16#FF20
#define SDIAS_OFFSET_SYNC_INJECTION_CFG     16#FF3D
#define SDIAS_OFFSET_TRIGGER_UNIT_SETUP_0   16#FF41
#define SDIAS_OFFSET_TRIGGER_UNIT_SETUP_1   16#FF45
#define SDIAS_OFFSET_TASK_START_CFG_0       16#FF60
#define SDIAS_OFFSET_TASK_CONFIG_0          16#FF86
#define SDIAS_OFFSET_TASK_CONFIG_1          16#FF96
#define SDIAS_OFFSET_TASK_INFO_1            16#FF94
#define SDIAS_OFFSET_TASK_HANDSHAKE_1       16#FF9B
#define SDIAS_OFFSET_TASK_DURATION_TIME_1   16#FF9C
#define SDIAS_OFFSET_TASK_DURATION_TIME_2   16#FFAC
#define SDIAS_OFFSET_TASK_CONFIG_2          16#FFA6

#define SDIAS_RETRIES_ALLOWED         2

// mask to get global error flag out of message counter byte of SDO responses
#define SDIAS_MASK_GLOBAL_ERROR_FLAG        16#80

// mask to get message counter out of message counter byte of SDO responses
#define SDIAS_MASK_MESSAGE_COUNTER          16#3F


#define SDIAS_EVENT_MASK_ID_SYNC_OUT0       16#10
#define SDIAS_EVENT_MASK_ID_SYNC_OUT1       16#11
#define SDIAS_EVENT_MASK_ID_SYNC_OUT2       16#12
#define SDIAS_EVENT_MASK_ID_SYNC_OUT3       16#13

#define SDIAS_MANAGER_SYNC_SYNCOUT_ID       16#85
#define SDIAS_TASK_START_EVENT_SYNCOUT_ID   16#86


#define SDIAS_PLACE_NO_MODULE_ADDED_SO_FAR  16#80000000

#define SDIAS_TRIGGER_UNIT_BYTE_SIZE        2

#define SDIAS_WAIT_TIME_FIRMWARE_HANDSHAKE  5 * 1000

// if the firmware version is below this, there might be problems with SCP111 and other modules => print warning at startup
#define SDIAS_FW_VERSION_SDO_ERROR_FIXED    16#120

// if the protocol version ist below this, Control Read/Broadcast Write Command is not supported by sdiasmanager
#define SDIAS_PROTOCOLVERSION_BROADCAST     16#120

// if the cil version ist below this, Control Read/Broadcast Write Command is not supported by OS for local SDIAS.
#define SDIAS_CILVERSION_BROADCAST         16#5001 

// timeout for blocking the init during initialisation (in ms)
#define SDIAS_INIT_BLOCK_TIMEOUT            20 * 1000

#define SDIAS_MUTEX_NAME_END_LENGTH 3
#define SDIAS_MUTEX_NAME_MAX_LENGTH 32
#define SDIAS_MUTEX_STR_SEPERATOR   ".."

//#define SDIAS_RT_TIME_MEASUREMENT
#ifdef SDIAS_RT_TIME_MEASUREMENT
  #pragma message("ATTENTION: SDIAS real time measurement is active and needs additional ressources in the realtime task")
#endif

(* SDIAS data object commands  *)
#define	 SDIAS_CMD_END							  0x00			(* End command										          *)
#define	 SDIAS_CMD_ACC_MEMORY				  0x01			(* Access dpram memory								      *)
#define	 SDIAS_CMD_ACC_CONTROL				0x02			(* Access dpram control memory						  *)
#define	 SDIAS_CMD_GLOBAL						  0x03			(* SDIAS global command								      *)
#define	 SDIAS_CMD_COPY_LOCAL					0x04			(* DPRAM copy command in local dpram				*)
#define	 SDIAS_CMD_JMP_LOCAL					0x05			(* DPRAM jump command in local dpram 				*)
#define  SDIAS_CMD_ACC_MEMORY_FAR     0x07      (* SDIAS Far Memory Access                  *)

(* SDIAS defines for data object handling *)
// Write data oject list
#define	 SDIAS_DOL_WRITE_USAGE_DOL_EMPTY	  0x20			(* Usage of empty write dol list (wachtdog trigger + end command)   *)
#define	 SDIAS_DOL_WRITE_USAGE_DTA_EMPTY	  0x03			(* Usage of empty write dol data (DO ctrl of 2x copy command for task information + DO ctrl of watchdog trigger      *)
#define	 SDIAS_DOL_WRITE_OFFSET_END_CMD			0x10			(* One data object in list - offset = 1 DO size = 0x10						  *)
#define	 SDIAS_DOL_WRITE_OFFSET_FIRST_DTA		0x02			(* Offset of first data byte of second copy command = 2 (DO ctrl)   *)
#define	 SDIAS_DOL_WRITE_OFFSET_LAST_DTA		0x02			(* Offset of last data byte of second copy command = 2 (DO ctrl )   *)

// Read data oject list
#define	 SDIAS_DOL_READ_USAGE_DOL_EMPTY	    0x30			(* Usage of empty read dol list (2x task info copy command + end command)   *)
#define	 SDIAS_DOL_READ_USAGE_DTA_EMPTY	    0x0D			(* Usage of empty write dol data (DO ctrl of 2x copy command for task information + DO ctrl of watchdog trigger      *)
#define	 SDIAS_DOL_READ_OFFSET_END_CMD			0x20			(* One data object in list - offset = 1 DO size = 0x10						          *)
#define	 SDIAS_DOL_READ_OFFSET_FIRST_DTA		0x07			(* Offset of first data byte of second copy command = 7 = DO state          *)
#define	 SDIAS_DOL_READ_OFFSET_LAST_DTA		  0x0C			(* Offset of last data byte of second copy command = 12 (last byte of task information)       *)

//Versionsnumber where SDIAS SPI Read Accesses are available
#define  SDIAS_SDO_SPI_FIRMWARE_VERSION_AVAILABLE 16#0120

//error info mask
#define  SDIAS_ERROR_INFO_MASK    2#1000011000011111

// Broadcast DO Info
#define SDIAS_OFFSET_CLIENT_CTRLTIMESTAMP   16#0190
#define SDIAS_NR_TIMEBROADCAST_DOS 2
#define SDIAS_TIMEBROADCAST_SUBCMD 16#B0
#include "..\..\source\interfaces\lsl_st_pll.h"
//Define part of class SdiasPLC
#define SDIASM_OBJECT_PATH            16#88000002   // Object Path for VSDIASmanager Length = 2 (First 2byte), Domain = 0 (3rd byte), Escape Sequence SDIAS (4th byte)
//Define part of class VaranManager
#define SIZE_PAYLOAD_FRAME_HEADER_DO      16#38  // Const because datasize is in the Payload DOs
#define SIZE_PAYLOAD_IRQ_FRAME_HEADER_DO  16#40  // Const because datasize is in the Payload DOs

#define VM_MAX_POST_INIT_MODULES  1000

#define VM_OBJECT_PATH            16#81000002   // Object Path for Varanmanager Length = 2 (First 2byte), Domain = 0 (3rd byte), Escape Sequence Varan (4th byte)
#include "..\..\Class\VaranManager\VaranManager.h"
#include "..\..\Source\interfaces\lsl_st_kernel.h"


FUNCTION GLOBAL TAB ONE_HW_Network
-1$UINT, 0$UINT, 
0$UINT, 0$UINT,

27$UDINT,
TO_UDINT(529317953), "_CanLib", 1$UINT, 10$UINT, 2$UINT,
TO_UDINT(4078275645), "_SerLib", 1$UINT, 34$UINT, 3$UINT,
TO_UDINT(2897291062), "ASCII_BIN", 1$UINT, 21$UINT, 1$UINT,
TO_UDINT(3882880897), "BusInterfaceSDIASInternal", 2$UINT, 1$UINT, 0$UINT,
TO_UDINT(658879389), "CP112_IOs", 1$UINT, 1$UINT, 1$UINT,
TO_UDINT(794617671), "CriticalSection", 0$UINT, 4$UINT, 2$UINT,
TO_UDINT(3238133653), "Hub_Base", 1$UINT, 21$UINT, 0$UINT,
TO_UDINT(1770276445), "Hub_Base_Root", 2$UINT, 11$UINT, 1$UINT,
TO_UDINT(3078259981), "HwcLogging", 1$UINT, 0$UINT, 1$UINT,
TO_UDINT(2471641665), "HwControl", 5$UINT, 21$UINT, 1$UINT,
TO_UDINT(1193052171), "HwControlBase", 1$UINT, 10$UINT, 0$UINT,
TO_UDINT(4260294091), "HWRtPostScan", 1$UINT, 0$UINT, 1$UINT,
TO_UDINT(2225119864), "MerkerEx", 1$UINT, 22$UINT, 1$UINT,
TO_UDINT(3031612134), "PL221", 1$UINT, 5$UINT, 1$UINT,
TO_UDINT(1799751072), "SafetyManager", 2$UINT, 26$UINT, 1$UINT,
TO_UDINT(3727715967), "SafetyUDP", 1$UINT, 4$UINT, 0$UINT,
TO_UDINT(3175101883), "SdiasBase", 1$UINT, 60$UINT, 0$UINT,
TO_UDINT(4173303375), "SdiasHubBase", 1$UINT, 10$UINT, 1$UINT,
TO_UDINT(2118381352), "SdiasManager", 1$UINT, 97$UINT, 1$UINT,
TO_UDINT(1159122596), "SdiasPLC", 2$UINT, 6$UINT, 1$UINT,
TO_UDINT(1850111279), "String", 1$UINT, 11$UINT, 1$UINT,
TO_UDINT(2898603620), "StringInternal", 1$UINT, 85$UINT, 0$UINT,
TO_UDINT(2940693151), "VaranManager", 3$UINT, 5$UINT, 0$UINT,
TO_UDINT(1989862026), "VaranManager_1", 2$UINT, 5$UINT, 1$UINT,
TO_UDINT(4035182347), "VaranManager_Base", 1$UINT, 25$UINT, 0$UINT,
TO_UDINT(3232495061), "VirtualBaseInit", 1$UINT, 3$UINT, 0$UINT,
TO_UDINT(819479645), "XXXBase_IOs", 1$UINT, 1$UINT, 0$UINT,

1$UINT, TO_UDINT(3194356815), "CP112_IOS1\_BASE\_CANLIB1", 
1$UINT, TO_UDINT(661607925), "CP112_IOS1\_BASE\_CANLIB2", 

1$UINT, TO_UDINT(3879313428), "CP112_IOS1\_BASE\_SERLIB1", 
1$UINT, TO_UDINT(2117136814), "CP112_IOS1\_BASE\_SERLIB2", 
1$UINT, TO_UDINT(154648888), "CP112_IOS1\_BASE\_SERLIB3", 

1$UINT, TO_UDINT(3603645853), "VARANMANAGER_11\_BASE\ASCII_BIN1", 


_NO_ATTR, TO_UDINT(222643709), "CP112_IOS1", 

1$UINT, TO_UDINT(2972590922), "HWCONTROL1\SAFETYMANAGER\UDPRECEIVEDATA", 
1$UINT, TO_UDINT(1868223583), "HWCONTROL1\SAFETYMANAGER\UDPSENDDATA", 


1$UINT, TO_UDINT(1776428101), "VARANMANAGER_11\HUB_BASE_ROOT0", 

1$UINT, TO_UDINT(3105254819), "HWCONTROL1\HWCLOGGING", 

_NO_ATTR, TO_UDINT(2190789875), "HWCONTROL1", 


1$UINT, TO_UDINT(1673205898), "HWCONTROL1\HWRTPOSTSCAN", 

1$UINT, TO_UDINT(4238278757), "HWOBJ_PL221\_BASE\SERIALNOSTR\MERKEREX0", 

_NO_ATTR, TO_UDINT(1499726047), "HWOBJ_PL221", 

1$UINT, TO_UDINT(1778590035), "HWCONTROL1\SAFETYMANAGER", 



1$UINT, TO_UDINT(1007630054), "SDIASPLC1\SDIASHUBBASE1", 

1$UINT, TO_UDINT(4015996540), "SDIASPLC1\SDIASMANAGER1", 

_NO_ATTR, TO_UDINT(1378000520), "SDIASPLC1", 

1$UINT, TO_UDINT(3661382879), "HWOBJ_PL221\_BASE\SERIALNOSTR", 



_NO_ATTR, TO_UDINT(2395414379), "VARANMANAGER_11", 




//Internal connections
0$UDINT,
16$UDINT,
TO_UDINT(6), "_SerLib1", TO_UDINT(2),
TO_UDINT(6), "_SerLib2", TO_UDINT(3),
TO_UDINT(6), "_CanLib1", TO_UDINT(0),
TO_UDINT(6), "_CanLib2", TO_UDINT(1),
TO_UDINT(6), "_SerLib3", TO_UDINT(4),
TO_UDINT(11), "SafetyManager", TO_UDINT(15),
TO_UDINT(11), "HWRtPostScan", TO_UDINT(12),
TO_UDINT(11), "HwcLogging", TO_UDINT(10),
TO_UDINT(14), "SerialNoStr", TO_UDINT(19),
TO_UDINT(15), "UdpSendData", TO_UDINT(8),
TO_UDINT(15), "UdpReceiveData", TO_UDINT(7),
TO_UDINT(18), "SdiasManager1", TO_UDINT(17),
TO_UDINT(18), "SdiasHubBase1", TO_UDINT(16),
TO_UDINT(19), "MerkerEx0", TO_UDINT(13),
TO_UDINT(20), "ASCII_BIN1", TO_UDINT(5),
TO_UDINT(20), "Hub_Base_Root0", TO_UDINT(9),
0$UDINT,
10$UDINT,
TO_UDINT(6), "To_HwControl", TO_UDINT(11), "Control",
TO_UDINT(9), "VaranConnect", TO_UDINT(20), "Control",
TO_UDINT(12), "toHwControlBase", TO_UDINT(11), "Control",
TO_UDINT(14), "SdiasIn", TO_UDINT(18), "InterfaceState",
TO_UDINT(15), "To_HwControl", TO_UDINT(11), "Control",
TO_UDINT(16), "ToNextSDIAS", TO_UDINT(17), "ClassState",
TO_UDINT(17), "ToBusInterface", TO_UDINT(18), "CallCommand",
TO_UDINT(18), "ToHwControl", TO_UDINT(11), "Control",
TO_UDINT(19), "DataBuffer", TO_UDINT(13), "m_udLength",
TO_UDINT(20), "To_HwControl", TO_UDINT(11), "Control",

//Initialization values
0$UDINT,
45$UDINT,
TO_UDINT(0), "CanBus", TO_UDINT(1),//|HW_Network._base\CP112_IOs1\_CanLib1.CanBus;
TO_UDINT(1), "CanBus", TO_UDINT(2),//|HW_Network._base\CP112_IOs1\_CanLib2.CanBus;
TO_UDINT(2), "Com", TO_UDINT(1),//|HW_Network._base\CP112_IOs1\_SerLib1.Com;
TO_UDINT(3), "Com", TO_UDINT(2),//|HW_Network._base\CP112_IOs1\_SerLib2.Com;
TO_UDINT(4), "Com", TO_UDINT(3),//|HW_Network._base\CP112_IOs1\_SerLib3.Com;
TO_UDINT(9), "Splitter_Place", TO_UDINT(0),//|HW_Network.VaranManager_11\Hub_Base_Root0.Splitter_Place;
TO_UDINT(11), "UdpSafetyPort", TO_UDINT(10823),//|HW_Network.HwControl1.UdpSafetyPort;
TO_UDINT(11), "InterfaceNo", TO_UDINT(1),//|HW_Network.HwControl1.InterfaceNo;
TO_UDINT(11), "RtTaskSync", TO_UDINT(0),//|HW_Network.HwControl1.RtTaskSync;
TO_UDINT(13), "ThreadSafe", TO_UDINT(0),//|HW_Network.SerialNoStr\_base\HwObj_PL221\MerkerEx0.ThreadSafe;
TO_UDINT(14), "LEDControl", TO_UDINT(0),//|HW_Network.HwObj_PL221.LEDControl;
TO_UDINT(14), "LEDStripeOn", TO_UDINT(1),//|HW_Network.HwObj_PL221.LEDStripeOn;
TO_UDINT(14), "Place", TO_UDINT(0),//|HW_Network.HwObj_PL221.Place;
TO_UDINT(14), "Required", TO_UDINT(1),//|HW_Network.HwObj_PL221.Required;
TO_UDINT(14), "Stripe1_Activate", TO_UDINT(1),//|HW_Network.HwObj_PL221.Stripe1_Activate;
TO_UDINT(14), "Stripe1_NumOfLeds", TO_UDINT(255),//|HW_Network.HwObj_PL221.Stripe1_NumOfLeds;
TO_UDINT(14), "Stripe1_Type", TO_UDINT(0),//|HW_Network.HwObj_PL221.Stripe1_Type;
TO_UDINT(14), "Stripe1_ColorResolution", TO_UDINT(0),//|HW_Network.HwObj_PL221.Stripe1_ColorResolution;
TO_UDINT(14), "Stripe1_RefreshCycle", TO_UDINT(50),//|HW_Network.HwObj_PL221.Stripe1_RefreshCycle;
TO_UDINT(14), "Stripe2_Activate", TO_UDINT(1),//|HW_Network.HwObj_PL221.Stripe2_Activate;
TO_UDINT(14), "Stripe2_NumOfLeds", TO_UDINT(255),//|HW_Network.HwObj_PL221.Stripe2_NumOfLeds;
TO_UDINT(14), "Stripe2_Type", TO_UDINT(0),//|HW_Network.HwObj_PL221.Stripe2_Type;
TO_UDINT(14), "Stripe2_ColorResolution", TO_UDINT(0),//|HW_Network.HwObj_PL221.Stripe2_ColorResolution;
TO_UDINT(14), "Stripe2_RefreshCycle", TO_UDINT(50),//|HW_Network.HwObj_PL221.Stripe2_RefreshCycle;
TO_UDINT(14), "PWM1Enable", TO_UDINT(1),//|HW_Network.HwObj_PL221.PWM1Enable;
TO_UDINT(14), "PWM2Enable", TO_UDINT(1),//|HW_Network.HwObj_PL221.PWM2Enable;
TO_UDINT(14), "PWM1Periode", TO_UDINT(50),//|HW_Network.HwObj_PL221.PWM1Periode;
TO_UDINT(14), "PWM2Periode", TO_UDINT(50),//|HW_Network.HwObj_PL221.PWM2Periode;
TO_UDINT(14), "WriteDataMode", TO_UDINT(0),//|HW_Network.HwObj_PL221.WriteDataMode;
TO_UDINT(15), "UdpSafetyPort", TO_UDINT(10823),//|HW_Network.HwControl1\SafetyManager.UdpSafetyPort;
TO_UDINT(15), "InterfaceNo", TO_UDINT(1),//|HW_Network.HwControl1\SafetyManager.InterfaceNo;
TO_UDINT(15), "UdpSafetyRequestCycle", TO_UDINT(UDP_MIN_REQUEST_TIME),//|HW_Network.HwControl1\SafetyManager.UdpSafetyRequestCycle;
TO_UDINT(15), "UdpSafetyResponseTimeout", TO_UDINT(UDP_MIN_RESPONSE_TIMEOUT),//|HW_Network.HwControl1\SafetyManager.UdpSafetyResponseTimeout;
TO_UDINT(16), "SplitterPlace", TO_UDINT(0),//|HW_Network.SdiasPLC1\SdiasHubBase1.SplitterPlace;
TO_UDINT(17), "DeviceID", TO_UDINT(0),//|HW_Network.SdiasPLC1\SdiasManager1.DeviceID;
TO_UDINT(17), "AutoFarMem", TO_UDINT(0),//|HW_Network.SdiasPLC1\SdiasManager1.AutoFarMem;
TO_UDINT(18), "CycleTime", TO_UDINT(1000),//|HW_Network.SdiasPLC1.CycleTime;
TO_UDINT(18), "IsoStartPoint", TO_UDINT(50),//|HW_Network.SdiasPLC1.IsoStartPoint;
TO_UDINT(18), "AutoFarMem", TO_UDINT(0),//|HW_Network.SdiasPLC1.AutoFarMem;
TO_UDINT(19), "SingleRealloc", TO_UDINT(1),//|HW_Network._base\HwObj_PL221\SerialNoStr.SingleRealloc;
TO_UDINT(20), "VaranManagerTime", TO_UDINT(1000000),//|HW_Network.VaranManager_11.VaranManagerTime;
TO_UDINT(20), "VaranManagerNr", TO_UDINT(0),//|HW_Network.VaranManager_11.VaranManagerNr;
TO_UDINT(20), "PayloadFrame", TO_UDINT(0),//|HW_Network.VaranManager_11.PayloadFrame;
TO_UDINT(20), "CoreSelect", TO_UDINT(0),//|HW_Network.VaranManager_11.CoreSelect;
TO_UDINT(20), "InterframeGap", TO_UDINT(0),//|HW_Network.VaranManager_11.InterframeGap;

//Symbolic initialization values
0$UDINT,
0$UDINT,

//Initialization of string values
0$UDINT,
0$UDINT,

//Configuration of tasks (RealTime, Cyclic, Background)
0$UDINT,
1$UDINT,
TO_UDINT(12), (1)$UDINT, 4194304$DINT, 	//HWCONTROL1\HWRTPOSTSCAN

0$UDINT,
0$UDINT,

0$UDINT,
0$UDINT,

//External connections
0$UDINT,
0$UDINT,

//Magic internal connections
0$UDINT,
4$UDINT,
TO_UDINT(15), "UdpSafetyPort", TO_UDINT(11), "UdpSafetyPort",
TO_UDINT(15), "InterfaceNo", TO_UDINT(11), "InterfaceNo",
TO_UDINT(15), "SafetyDomainTimeout", TO_UDINT(11), "SafetyDomainTimeout",
TO_UDINT(17), "AutoFarMem", TO_UDINT(18), "AutoFarMem",

//Configuration of timeslots of tasks (RealTime, Cyclic)
#ifdef __LSLLDR_TIMESLOTS__
0$UDINT,
0$UDINT,

0$UDINT,
0$UDINT,

#endif //__LSLLDR_TIMESLOTS__

//MultiMaster connections
#ifdef __LSLLDR_MULTIMASTER__
0$UDINT,
0$UDINT,
#endif //__LSLLDR_MULTIMASTER__

//Configuration for task ID (RealTime, CyclicTime)
#ifdef __LSLLDR_TASKID__
"\\\\TASKS2  "
0$UDINT,
1$UDINT,
(0)$UDINT, 	//HWCONTROL1\HWRTPOSTSCAN

0$UDINT,
0$UDINT,

0$UDINT,
0$UDINT,

#endif //__LSLLDR_TASKID__

END_FUNCTION