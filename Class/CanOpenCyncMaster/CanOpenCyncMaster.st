//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "CanOpenCyncMaster"
	Revision           = "0.0"
	GUID               = "{9FFCD968-1FB2-45C2-B622-9EE9E8E7E077}"
	RealtimeTask       = "true"
	DefRealtime        = "100 ms"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(480,360)">
	<Channels>
		<Server Name="ClassSvr" GUID="{D180DA30-A871-4A45-BA63-FBD829D77AD9}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="HeartbeatTime" GUID="{C98E3493-C9E2-4F85-AD81-3CA8DEFC7B67}" Visualized="true" Initialize="true" DefValue="1000" WriteProtected="false" Retentive="SRam" Comment="[ms]"/>
		<Client Name="CanOpen" Required="true" Internal="true"/>
		<Client Name="cNode" Required="true" Internal="false"/>
		<Client Name="Driver" Required="false" Internal="false"/>
	</Channels>
	<Network Name="CanOpenCyncMaster">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "CanOpen"
				GUID       = "{23575C73-62AE-4727-9D4F-8AFCB56482F5}"
				Class      = "CanOpenBase"
				Position   = "(210,120)"
				Visualized = "true"
				CyclicTime = "10 ms">
				<Channels>
					<Server Name="Server0"/>
					<Client Name="cNode" Value="1"/>
					<Client Name="ConfigData"/>
					<Client Name="Driver"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.CanOpen" Destination="CanOpen.Server0"/>
			<Connection Source="CanOpen.Driver" Destination="this.Driver" Vertices="(210,210),(38,210),"/>
			<Connection Source="CanOpen.cNode" Destination="this.cNode" Vertices="(210,270),(38,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
CanOpenCyncMaster : CLASS
	TYPE
	  NMT_Commands :  //! <Type Public="true" Name="NMT_Commands"/>
	  (
	    NC_Start:=1,
	    NC_Stop:=2,
	    NC_GotoPreOperational:=128,
	    NC_Reset:=129,
	    NC_ResetComm:=130
	  )$DINT;
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	HeartbeatTime 	: SvrCh_UDINT;
  //Clients:
	Driver 	: CltChCmd_CanDriverBase;
	cNode 	: CltCh_DINT;
	CanOpen 	: CltChCmd_CanOpenBase;
  //Variables:
		Stepper 	: DINT;
		tHeartbeat 	: UDINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL RtWork
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using CanOpenBase
#pragma usingLtd CanDriverBase


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB CanOpenCyncMaster::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CANOPENCYNCMASTER
0$UINT, 0$UINT, (SIZEOF(::CanOpenCyncMaster))$UINT, 
2$UINT, 3$UINT, 0$UINT, 
TO_UDINT(3696196759), "CanOpenCyncMaster", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::CanOpenCyncMaster.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::CanOpenCyncMaster.HeartbeatTime.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(3388654053), "HeartbeatTime", 
//Clients:
(::CanOpenCyncMaster.Driver.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000100$UINT, TO_UDINT(3785276255), "Driver", TO_UDINT(1472885325), "CanDriverBase", 0$UINT, 7$UINT, 
(::CanOpenCyncMaster.cNode.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000110$UINT, TO_UDINT(1272909673), "cNode", 
(::CanOpenCyncMaster.CanOpen.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2028551799), "CanOpen", TO_UDINT(4284412609), "CanOpenBase", 1$UINT, 6$UINT, 
END_FUNCTION


#define USER_CNT_CanOpenCyncMaster 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_CanOpenCyncMaster] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION CanOpenCyncMaster::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_CanOpenCyncMaster, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Write		:= #M_WR_DIRECT();
	vmt.CmdTable.RtWork		:= #RtWork();
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	HeartbeatTime.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF HeartbeatTime.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL CanOpenCyncMaster::RtWork
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR
  
  VAR
  	retval : dint;
  END_VAR

  IF IsClientConnected(#Driver) = 0 THEN
	  state := READY;
    RETURN;
  END_IF;

  retval := CanOpen.BuildSync(SyncId:=128);

  retval := CanOpen.BuildNmt(NmtId:=0, Cmnd:=01, Node:=0);


  CASE Stepper OF
    0:
    CanOpen.BuildHeartbeat();
     tHeartbeat := ops.tAbsolute;
     
     Stepper += 1;
    
    1:
     if ops.tAbsolute - tHeartbeat > HeartbeatTime then
       Stepper -= 1;
     end_if;
      
    END_CASE;  

	state := READY;

END_FUNCTION
