//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES
// Monitoring time (ms). If a button is not being pressed or released for a this amount of time the connection has been broken
#ifndef LMCAXIS_VOVMonitor_NoReactionTimeLimit
  #define  LMCAXIS_VOVMonitor_NoReactionTimeLimit 1000 ms
#endif
//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "_LMCAxisVOVMonitoring"
	Revision           = "1.0"
	GUID               = "{789D1D55-BB15-4207-8B5E-B5BE49DCD113}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	DefBackground      = "10 ms"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\_LMCAxisVis\LMCAxis.ico"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)"
	Comment            = "Class used to observe if a move hand button is still actively pressed in the VOV. If not a stop command is triggered after time LMCAXIS_VOVMonitor_NoReactionTimeLimit.">
	<Channels>
		<Server Name="ClassSvr" GUID="{808BD7BA-E667-47D4-A33D-ADA95A04CBDC}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="ToVisInt" Required="true" Internal="false"/>
	</Channels>
</Class>
*)
_LMCAxisVOVMonitoring : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
  //Clients:
	ToVisInt 	: CltChCmd__LMCAxisVisInt;
  //Variables:
		udStartLastMove 	: UDINT;
  //Functions:
				//! <Function Comment="Background task is used to obersve if a move hand button is still pressed. If not the active move command is stopped after timeout of LMCAXIS_VOVMonitor_NoReactionTimeLimit." Name="Background"/>
	FUNCTION VIRTUAL GLOBAL Background
		VAR_INPUT
			EAX 	: UDINT;
		END_VAR
		VAR_OUTPUT
			state (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd _LMCAxisVisInt


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _LMCAxisVOVMonitoring::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__LMCAXISVOVMONITORING
1$UINT, 0$UINT, (SIZEOF(::_LMCAxisVOVMonitoring))$UINT, 
1$UINT, 1$UINT, 0$UINT, 
TO_UDINT(3513915334), "_LMCAxisVOVMonitoring", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::_LMCAxisVOVMonitoring.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
//Clients:
(::_LMCAxisVOVMonitoring.ToVisInt.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(758519666), "ToVisInt", TO_UDINT(3511906983), "_LMCAxisVisInt", 1$UINT, 61$UINT, 
END_FUNCTION


#define USER_CNT__LMCAxisVOVMonitoring 1

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__LMCAxisVOVMonitoring] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _LMCAxisVOVMonitoring::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT__LMCAxisVOVMonitoring, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #Background();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL _LMCAxisVOVMonitoring::Background
	VAR_INPUT
		EAX 	: UDINT;
	END_VAR
	VAR_OUTPUT
		state (EAX) 	: UDINT;
	END_VAR

  // A move button is pressed
  if ((ToVisInt.MovNegFast.Read() <> 0) | (ToVisInt.MovNegSlow.Read() <> 0)   | 
      (ToVisInt.MovPosFast.Read() <> 0) | (ToVisInt.MovPosSlow.Read() <> 0))  then
    
    // Get the time stamp when the button has been pressed last time
    udStartLastMove := ToVisInt.GetLastMoveTimeStamp();
  
  // No move button is pressed
  else
    udStartLastMove := 0;
  end_if;
  
  // If a button is not being pressed or released for a specified amount of time the connection has been broken
  if ((udStartLastMove <> 0) & (ops.tAbsolute - udStartLastMove > LMCAXIS_VOVMonitor_NoReactionTimeLimit)) then
    ToVisInt.StopAxis();
  end_if;

	state := READY;

END_FUNCTION
