//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES

#ifndef RT_DATALOGGING_FILE
  #define RT_DATALOGGING_FILE   "Z:\RT_DEBUG.LOG"

#endif
//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "WewoMainLogger"
	Revision           = "0.2"
	GUID               = "{A9269606-C0BC-4D01-8D3C-C8A8A1FCEA09}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "true"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(1020,720)"
	Comment            = "SFN_PB_Logger&#13;&#10;&#13;&#10;Central place to log messages and/or realtime data&#13;&#10;received from other classes.&#13;&#10;(see methodes SF_Base.WriteLogRtData() en SF_Base.WriteLogMessage())&#13;&#10;&#13;&#10;This class supports&#13;&#10;1) message logging &#13;&#10;2) Realtime data logging&#13;&#10;3) Create a chain of connected SFN_Base objects for logging&#13;&#10;&#13;&#10;Both loggings can be activated simultanuously.&#13;&#10;&#13;&#10;Message logging stores messages to either screen, file or Both screen and file.&#13;&#10;Filename for message logging is fixed EVENT01.LOG (defined by Lasal OS).&#13;&#10;&#13;&#10;Server p_sfnObjChain Points to start of chain of connected SFN_Base objects.&#13;&#10;&#13;&#10;Server MsgLogLevel we can select the message priority levels which should be logged.&#13;&#10;&#13;&#10;Server MsgLogTarget we can select the output to send the messages to.&#13;&#10;&#13;&#10;Server o_MsgLogCnt Show nr of messages logged&#13;&#10;&#13;&#10;Server RtLogMBufMode is used to select the buffer mode &#13;&#10;- cyclic overwrite buffer if it is full&#13;&#10;- once   write until buffer is full&#13;&#10;&#13;&#10;Server ip_RtLogFile a pointer to File name string for RealtIme data logging can be set.&#13;&#10;Note: Filename for message logging is controled by Lasal OS.&#13;&#10;&#13;&#10;Server o_RtLogDataCnt: Show nr of realtime data entries logged&#13;&#10;&#13;&#10;Server ip_LogData is the interface to other class objects. Via this server this class receives the logdata from other classes.&#13;&#10;&#13;&#10;Server InsertRtStartLogNr is used to insert a reference entry in the Realtime data log buffer&#13;&#10;&#13;&#10;Server command is used to send commands. &#13;&#10;&#13;&#10;With methode SetTriggerRtLog() a trigger condition can be set (Stored in  variable RtTriggerSetting).&#13;&#10;&#13;&#10;Message logging logs messages in an OS buffer. If buffer is full the content is send to File.&#13;&#10;Client flusTime is used to set the time to flush automtically messages to a file in case buffer is not full.&#13;&#10;&#13;&#10;Realtime Data Logging logs data into an internal RAM buffer.&#13;&#10;With Client c_RtNrOfLogEntries we can select the number of entries to be stored.&#13;&#10;Note: Size of buffer may exceed the limit of 64K which is used by Lasal for class objects&#13;&#10;&#13;&#10;With LogCommand LOGCMD_SENDFILE_RT_LOG the stored RtLogData can be stored in a File.&#13;&#10;">
	<Channels>
	</Channels>
	<Dependencies>
		<Files>
			<File Path=".\Class\WewoMainLogger\SF_PB_Logger.pdf"/>
		</Files>
	</Dependencies>
	<RevDoku>
		<Owner Company="Safan B.V." Author="HenOdi"/>
		<Dokumentation Revision="0.2" Date="2012-06-04" Author="HenOdi" Company="Safan B.V." Description="Make Server channels retentive server (store via SRAM) which are used to set logmodes.&#13;&#10;Now the latest setting will be stored on SRAM so after a restart the log mode will be the same as it was set previously in the machine settingfile.&#13;&#10;If wanted we can see nog loggings also on startup before file was loaded."/>
	</RevDoku>
	<Network Name="WewoMainLogger">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{FDDCF024-35F7-4586-A39E-C3C876EC2DBB}"
				Class      = "WewoLogger"
				Position   = "(608,120)"
				Visualized = "false">
				<Channels>
					<Server Name="Command"/>
					<Server Name="InsertRtStartLogNr"/>
					<Server Name="ip_LogData"/>
					<Server Name="ip_RtLogFile"/>
					<Server Name="m_Id"/>
					<Server Name="m_p_Name"/>
					<Server Name="MsgLogLevel"/>
					<Server Name="MsgLogTarget"/>
					<Server Name="o_ErrorWarningStatus"/>
					<Server Name="o_MsgLogCnt"/>
					<Server Name="o_rtLogDataCnt"/>
					<Server Name="ObjectStatus"/>
					<Server Name="op_sfnObjChain"/>
					<Server Name="RtLogBufMode"/>
					<Server Name="ToObject"/>
					<Client Name="c_FlushTime"/>
					<Client Name="c_Group"/>
					<Client Name="c_RtNrOfLogEntries"/>
					<Client Name="o_ErrorWarningEvent"/>
					<Client Name="o_RtTriggerEvent"/>
					<Client Name="op_LogData"/>
					<Client Name="toEnumTranslator"/>
					<Client Name="ToOsKernel"/>
					<Client Name="ToSysMsg"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ToObject" Destination="_base.ToObject" Vertices="(1936,210),(1764,210),"/>
			<Connection Source="this.ObjectStatus" Destination="_base.ObjectStatus" Vertices="(1936,270),(1764,270),"/>
			<Connection Source="this.m_Id" Destination="_base.m_Id" Vertices="(1936,390),(1764,390),"/>
			<Connection Source="this.m_p_Name" Destination="_base.m_p_Name" Vertices="(1936,450),(1764,450),"/>
			<Connection Source="this.o_MsgLogCnt" Destination="_base.o_MsgLogCnt" Vertices="(1936,690),(1764,690),"/>
			<Connection Source="this.MsgLogLevel" Destination="_base.MsgLogLevel" Vertices="(1936,570),(1764,570),"/>
			<Connection Source="this.MsgLogTarget" Destination="_base.MsgLogTarget" Vertices="(1936,630),(1764,630),"/>
			<Connection Source="this.ip_LogData" Destination="_base.ip_LogData" Vertices="(1936,930),(1764,930),"/>
			<Connection Source="this.RtLogBufMode" Destination="_base.RtLogBufMode" Vertices="(1936,750),(1764,750),"/>
			<Connection Source="this.Command" Destination="_base.Command" Vertices="(1936,1050),(1764,1050),"/>
			<Connection Source="_base.c_FlushTime" Destination="this.c_FlushTime" Vertices="(608,510),(420,510),(420,390),(38,390),"/>
			<Connection Source="_base.c_RtNrOfLogEntries" Destination="this.c_RtNrOfLogEntries" Vertices="(608,570),(390,570),(390,450),(38,450),"/>
			<Connection Source="this.o_rtLogDataCnt" Destination="_base.o_rtLogDataCnt" Vertices="(1936,870),(1764,870),"/>
			<Connection Source="this.ip_RtLogFile" Destination="_base.ip_RtLogFile" Vertices="(1936,810),(1764,810),"/>
			<Connection Source="_base.op_LogData" Destination="this.op_LogData" Vertices="(608,210),(38,210),"/>
			<Connection Source="_base.o_RtTriggerEvent" Destination="this.o_RtTriggerEvent" Vertices="(608,630),(360,630),(360,510),(38,510),"/>
			<Connection Source="_base.o_ErrorWarningEvent" Destination="this.o_ErrorWarningEvent" Vertices="(608,690),(330,690),(330,570),(38,570),"/>
			<Connection Source="this.o_ErrorWarningStatus" Destination="_base.o_ErrorWarningStatus" Vertices="(1936,330),(1764,330),"/>
			<Connection Source="this.op_sfnObjChain" Destination="_base.op_sfnObjChain" Vertices="(1936,510),(1764,510),"/>
			<Connection Source="_base.c_Group" Destination="this.c_Group" Vertices="(608,270),(38,270),"/>
			<Connection Source="_base.toEnumTranslator" Destination="this.toEnumTranslator" Vertices="(608,450),(450,450),(450,330),(38,330),"/>
			<Connection Source="this.InsertRtStartLogNr" Destination="_base.InsertRtStartLogNr" Vertices="(1936,990),(1764,990),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using WewoLogger

WewoMainLogger : CLASS
: WewoLogger
  //Servers:
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB WewoMainLogger::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_WEWOMAINLOGGER
0$UINT, 2$UINT, (SIZEOF(::WewoMainLogger))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1736662504), "WewoMainLogger", //Class
TO_UDINT(413350294), "WewoLogger", 0$UINT, 8$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_WewoMainLogger 14

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_WewoMainLogger] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION WewoMainLogger::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= WewoLogger::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= WewoBase::ToObject.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, WewoBase::ToObject.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_WewoMainLogger;
	vmt.CmdTable.Init		:= #Init();
	WewoBase::ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF WewoBase::ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION



FUNCTION VIRTUAL GLOBAL WewoMainLogger::Init

  
  WewoLogger::Init();

  if initCnt = 1 then
    // Be sure it is initialised before string is used
    ip_RtLogFile.Write(input:=RT_DATALOGGING_FILE);
    
  end_if;
    
  
END_FUNCTION
