//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "AuxiliaryNavitec"
	Revision           = "0.0"
	GUID               = "{2D585D0F-7726-460C-BF7F-18FB5C36ED23}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(990,120)">
	<Channels>
		<Client Name="ObjNavitec" Required="true" Internal="true"/>
	</Channels>
	<Network Name="AuxiliaryNavitec">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{84F08BA9-CE96-4B07-AF79-044F99313425}"
				Class      = "AuxBase"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="ToObject"/>
					<Client Name="op_LogData"/>
					<Client Name="p_NextObject"/>
				</Channels>
			</Object>
			<Object
				Name       = "ObjNavitec"
				GUID       = "{8D3679BA-483C-489C-8191-59FE44B305CB}"
				Class      = "NavitecInterface"
				Position   = "(180,330)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="ClassSvr"/>
					<Server Name="Connected"/>
					<Server Name="Data"/>
					<Server Name="Enabled"/>
					<Client Name="AlarmStartID"/>
					<Client Name="objAutomaticControl"/>
					<Client Name="objBMS"/>
					<Client Name="objKinematicNpivot"/>
					<Client Name="objStateControl"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ToObject" Destination="_base.ToObject" Vertices="(976,210),(804,210),"/>
			<Connection Source="_base.op_LogData" Destination="this.op_LogData" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.p_NextObject" Destination="this.p_NextObject" Vertices="(218,270),(38,270),"/>
			<Connection Source="this.ObjNavitec" Destination="ObjNavitec.ClassSvr"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using AuxBase

AuxiliaryNavitec : CLASS
: AuxBase
  //Servers:
  //Clients:
	ObjNavitec 	: CltChCmd_NavitecInterface;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL HandleOperational;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using NavitecInterface


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB AuxiliaryNavitec::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_AUXILIARYNAVITEC
0$UINT, 0$UINT, (SIZEOF(::AuxiliaryNavitec))$UINT, 
0$UINT, 1$UINT, 0$UINT, 
TO_UDINT(2284969920), "AuxiliaryNavitec", //Class
TO_UDINT(4233457716), "AuxBase", 0$UINT, 0$UINT, //Baseclass
//Servers:
//Clients:
(::AuxiliaryNavitec.ObjNavitec.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1276319432), "ObjNavitec", TO_UDINT(256278040), "NavitecInterface", 0$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_AuxiliaryNavitec 19

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_AuxiliaryNavitec] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION AuxiliaryNavitec::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= AuxBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= WewoBase::ToObject.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, WewoBase::ToObject.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_AuxiliaryNavitec;
#pragma warning (disable : 74)
	vmt.UserFcts[15]		:= #HandleOperational();

#pragma warning (default : 74)
	WewoBase::ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF WewoBase::ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL AuxiliaryNavitec::HandleOperational
    // 
        ObjNavitec.WorkTask();


END_FUNCTION
