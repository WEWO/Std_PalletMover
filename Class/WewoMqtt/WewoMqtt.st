//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "WewoMqtt"
	Revision           = "0.0"
	GUID               = "{85D0582A-C6E2-46C1-BC03-2DD4C499AA9A}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(1140,540)">
	<Channels>
		<Server Name="TopicItem" GUID="{A603EDC0-4FEF-490D-89FF-2D492784DFC1}" Class="String" Visualized="true" Remotely="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="use this channel to access the string functions"/>
		<Server Name="TopicPath" GUID="{10AEE0FF-32A1-4CB5-8670-A1C40B7D8B96}" Class="String" Visualized="true" Remotely="true" Initialize="true" WriteProtected="false" Retentive="false" Comment="use this channel to access the string functions"/>
		<Client Name="op_LogData" Required="false" Internal="false" Comment="Output for logging data to SF_Logger"/>
		<Client Name="String1" Required="true" Internal="true"/>
		<Client Name="String2" Required="true" Internal="true"/>
		<Client Name="WewoBase2" Required="true" Internal="true"/>
	</Channels>
	<Network Name="WewoMqtt">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{E7726F10-F1D4-4E31-9B88-7F65E6D83F4C}"
				Class      = "MQTTTopicString"
				Position   = "(218,120)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="DataString"/>
					<Server Name="GrantedQoS"/>
					<Server Name="PublishInterval" Value="10 sec"/>
					<Server Name="QoS"/>
					<Server Name="RetainData"/>
					<Server Name="TopicName"/>
					<Server Name="TopicState"/>
					<Server Name="TopicType"/>
					<Client Name="cAutoResetTime" Value="MQTTTOPIC_DEFAULT_AUTORESET_TIME"/>
					<Client Name="cPublishTimeout" Value="MQTTTOPIC_DEFAULT_PUBLISH_TIMEOUT"/>
					<Client Name="cSubscribeTimeout" Value="MQTTTOPIC_DEFAULT_SUBSCRIBE_TIMEOUT"/>
					<Client Name="cUnsubscribeTimeout" Value="MQTTTOPIC_DEFAULT_UNSUBSCRIBE_TIMEOUT"/>
					<Client Name="ocMQTTClient_Interface"/>
					<Client Name="ocSigCLib"/>
					<Client Name="ocStdLib"/>
				</Channels>
			</Object>
			<Object
				Name       = "String1"
				GUID       = "{A46D00C5-5EB8-43CE-8958-7527A0AE6CAC}"
				Class      = "String"
				Position   = "(210,720)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "String2"
				GUID       = "{2BCABC98-B613-4EEB-A2C4-D6366EB17DA4}"
				Class      = "String"
				Position   = "(210,900)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Data"/>
					<Client Name="SingleRealloc" Value="1"/>
				</Channels>
			</Object>
			<Object
				Name       = "WewoBase2"
				GUID       = "{DB9A97F7-0086-45B1-AD6C-065AF8CEC4B8}"
				Class      = "WewoBase"
				Position   = "(210,1080)"
				Visualized = "false">
				<Channels>
					<Server Name="m_Id"/>
					<Server Name="m_p_Name"/>
					<Server Name="o_ErrorWarningStatus"/>
					<Server Name="ObjectStatus"/>
					<Server Name="ToObject"/>
					<Client Name="c_Group"/>
					<Client Name="op_LogData"/>
					<Client Name="toOsLibTaskObjControl"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.TopicState" Destination="_base.TopicState" Vertices="(2236,210),(2064,210),"/>
			<Connection Source="this.TopicType" Destination="_base.TopicType" Vertices="(2236,270),(2064,270),"/>
			<Connection Source="this.TopicName" Destination="_base.TopicName" Vertices="(2236,330),(2064,330),"/>
			<Connection Source="this.PublishInterval" Destination="_base.PublishInterval" Vertices="(2236,390),(2064,390),"/>
			<Connection Source="this.RetainData" Destination="_base.RetainData" Vertices="(2236,450),(2064,450),"/>
			<Connection Source="this.QoS" Destination="_base.QoS" Vertices="(2236,510),(2064,510),"/>
			<Connection Source="this.GrantedQoS" Destination="_base.GrantedQoS" Vertices="(2236,570),(2064,570),"/>
			<Connection Source="this.DataString" Destination="_base.DataString" Vertices="(2236,630),(2064,630),"/>
			<Connection Source="_base.ocMQTTClient_Interface" Destination="this.ocMQTTClient_Interface" Vertices="(218,210),(38,210),"/>
			<Connection Source="this.String1" Destination="String1.Data"/>
			<Connection Source="this.TopicPath" Destination="String1.Data" Vertices="(2236,690),(946,810),"/>
			<Connection Source="this.String2" Destination="String2.Data"/>
			<Connection Source="this.TopicItem" Destination="String2.Data" Vertices="(2236,750),(946,990),"/>
			<Connection Source="this.WewoBase2" Destination="WewoBase2.ToObject"/>
			<Connection Source="WewoBase2.op_LogData" Destination="this.op_LogData" Vertices="(210,1170),(38,690),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using MQTTTopicString

WewoMqtt : CLASS
: MQTTTopicString
  //Servers:
	TopicPath 	: SvrChCmd_UDINT;
	TopicItem 	: SvrChCmd_UDINT;
  //Clients:
	String1 	: CltChCmd_String;
	String2 	: CltChCmd_String;
	WewoBase2 	: CltChCmd_WewoBase;
	op_LogData 	: CltCh_gpt_LogData;
  //Variables:
		Stringdata1 	: ^CHAR;
		Stringdata2 	: ^CHAR;
  //Functions:
				//! <Function Comment="Initialisation of class. In the first init run, the timeouts for subscribe, unsubscribe and publish will be set." Name="Init"/>
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION GLOBAL UpdateTopicName;
	
	FUNCTION VIRTUAL GLOBAL TopicPath::Read
		VAR_OUTPUT
			output (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL TopicPath::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL TopicItem::Read
		VAR_OUTPUT
			output (EAX) 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL TopicItem::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using String
#pragma using WewoBase


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB WewoMqtt::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_WEWOMQTT
0$UINT, 0$UINT, (SIZEOF(::WewoMqtt))$UINT, 
2$UINT, 4$UINT, 0$UINT, 
TO_UDINT(1359692133), "WewoMqtt", //Class
TO_UDINT(3831352762), "MQTTTopicString", 1$UINT, 1$UINT, //Baseclass
//Servers:
(::WewoMqtt.TopicPath.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(828308920), "TopicPath", 
(::WewoMqtt.TopicItem.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000001000000$UINT, TO_UDINT(621892521), "TopicItem", 
//Clients:
(::WewoMqtt.String1.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(677614747), "String1", TO_UDINT(1850111279), "String", 1$UINT, 11$UINT, 
(::WewoMqtt.String2.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2976564513), "String2", TO_UDINT(1850111279), "String", 1$UINT, 11$UINT, 
(::WewoMqtt.WewoBase2.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2743326016), "WewoBase2", TO_UDINT(817841270), "WewoBase", 0$UINT, 29$UINT, 
(::WewoMqtt.op_LogData.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(1597732449), "op_LogData", 
END_FUNCTION


#define USER_CNT_WewoMqtt 8

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_WewoMqtt] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION WewoMqtt::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= MQTTTopicString::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= MQTTTopic::TopicState.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, MQTTTopic::TopicState.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_WewoMqtt;
	vmt.CmdTable.Init		:= #Init();
	MQTTTopic::TopicState.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF MQTTTopic::TopicState.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, TopicPath.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Read		:= #TopicPath::Read();
	vmt.CmdTable.Write		:= #TopicPath::Write();
	TopicPath.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF TopicPath.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, TopicItem.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Read		:= #TopicItem::Read();
	vmt.CmdTable.Write		:= #TopicItem::Write();
	TopicItem.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF TopicItem.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL WewoMqtt::TopicPath::Read
	VAR_OUTPUT
		output (EAX) 	: UDINT;
	END_VAR

	TopicPath := String1.Data.Read();
	output := TopicPath;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL WewoMqtt::TopicPath::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR
  
	TopicPath := input;
 	result := (String2.Data.Write(TopicPath))$UDINT;
    UpdateTopicName();
END_FUNCTION


FUNCTION VIRTUAL GLOBAL WewoMqtt::Init

  
  
END_FUNCTION


FUNCTION VIRTUAL GLOBAL WewoMqtt::TopicItem::Read
	VAR_OUTPUT
		output (EAX) 	: UDINT;
	END_VAR

	TopicItem := String2.Data.Read();
	output := TopicItem;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL WewoMqtt::TopicItem::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR

  	TopicItem := input;
	result := (String2.Data.Write(TopicItem))$UDINT;
    UpdateTopicName(); 
END_FUNCTION


FUNCTION GLOBAL WewoMqtt::UpdateTopicName
  var
        TempString1     : Array[0..100] of Char;
        TempString2     : Array[0..100] of Char;
        TempString3     : Array[0..100] of Char;
   END_VAR

 _memset(dest:=#TempString3[0], usByte:=0, cntr:=sizeof(TempString3));
 _memset(dest:=#TempString2[0], usByte:=0, cntr:=sizeof(TempString3));
 _memset(dest:=#TempString1[0], usByte:=0, cntr:=sizeof(TempString3));
  String1.ReadDataOff(udOff:=0, pData:=#TempString1[0], udMax:=sizeof(TempString1));
  String2.ReadDataOff(udOff:=0, pData:=#TempString2[0], udMax:=sizeof(TempString2));
   _strcat(dest:= #TempString3[0] ,src:=#TempString1[0]);
   _strcat(dest:= #TempString3[0], src:="/");
   _strcat(dest:= #TempString3[0], src:=#TempString2[0]);
  
  objTopicName.WriteDataOff(udLen:=sizeof(TempString2), udOff:=0, pData:=#TempString3[0]);
END_FUNCTION
