//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "I_Hmi"
	Revision           = "0.0"
	GUID               = "{0F048E44-F136-4FCC-B4F4-1AAF6CF1BBB5}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(720,360)">
	<Channels>
		<Server Name="GetManualLiftHeight" GUID="{2CC7CE14-0742-44EC-9362-B46338FB69FD}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SetAgvState" GUID="{E1B004D3-5D91-4506-8CF9-83D46E00800E}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="SetErrorMessage" GUID="{D6560B49-D465-4AC4-B62E-C1CBD3CD4565}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
	</Channels>
	<Network Name="I_Hmi">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{74560BBF-D582-423E-955E-A541392AE1A8}"
				Class      = "WewoBase"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="m_Id"/>
					<Server Name="m_p_Name"/>
					<Server Name="o_ErrorWarningStatus"/>
					<Server Name="ObjectStatus"/>
					<Server Name="ToObject"/>
					<Client Name="c_Group"/>
					<Client Name="op_LogData"/>
					<Client Name="toOsLibTaskObjControl"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ToObject" Destination="_base.ToObject" Vertices="(856,210),(684,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using WewoBase

I_Hmi : CLASS
: WewoBase
	TYPE
	  HmiErrorMessages :  //! <Type Public="true" Name="HmiErrorMessages"/>
	  (
	    NoError
	  )$UDINT;
	END_TYPE
  //Servers:
	SetErrorMessage 	: SvrCh_HmiErrorMessages_PTofCls_I_Hmi;
	SetAgvState 	: SvrCh_DINT;
	GetManualLiftHeight 	: SvrCh_DINT;
  //Clients:
  //Variables:
  //Functions:
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB I_Hmi::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_I_HMI
0$UINT, 0$UINT, (SIZEOF(::I_Hmi))$UINT, 
3$UINT, 0$UINT, 0$UINT, 
TO_UDINT(888260309), "I_Hmi", //Class
TO_UDINT(817841270), "WewoBase", 0$UINT, 29$UINT, //Baseclass
//Servers:
(::I_Hmi.SetErrorMessage.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1934725841), "SetErrorMessage", 
(::I_Hmi.SetAgvState.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4049556335), "SetAgvState", 
(::I_Hmi.GetManualLiftHeight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2111435209), "GetManualLiftHeight", 
//Clients:
END_FUNCTION


#define USER_CNT_I_Hmi 12

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_I_Hmi] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION I_Hmi::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= WewoBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= WewoBase::ToObject.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, WewoBase::ToObject.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_I_Hmi;
	WewoBase::ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF WewoBase::ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SetErrorMessage.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF SetErrorMessage.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SetAgvState.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF SetAgvState.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
