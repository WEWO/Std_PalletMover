//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Wewo_EnumTranslator"
	Revision           = "0.0"
	GUID               = "{D4C2ED00-1CD7-4263-8A82-8C1168E2BDE6}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(654,120)">
	<Channels>
	</Channels>
	<Network Name="Wewo_EnumTranslator">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{892FED79-0978-4D9E-A9E0-C69E46DE363B}"
				Class      = "Wewo_LinkedListControlBase"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="m_Id"/>
					<Server Name="m_p_Name"/>
					<Server Name="o_ErrorWarningStatus"/>
					<Server Name="o_NrOfObjectsInList"/>
					<Server Name="ObjectStatus"/>
					<Server Name="ToObject"/>
					<Client Name="c_Group"/>
					<Client Name="op_LogData"/>
					<Client Name="p_FirstObject"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ToObject" Destination="_base.ToObject" Vertices="(1216,210),(1044,210),"/>
			<Connection Source="this.ObjectStatus" Destination="_base.ObjectStatus" Vertices="(1216,270),(1044,270),"/>
			<Connection Source="this.o_ErrorWarningStatus" Destination="_base.o_ErrorWarningStatus" Vertices="(1216,330),(1044,330),"/>
			<Connection Source="this.m_Id" Destination="_base.m_Id" Vertices="(1216,390),(1044,390),"/>
			<Connection Source="this.m_p_Name" Destination="_base.m_p_Name" Vertices="(1216,450),(1044,450),"/>
			<Connection Source="this.o_NrOfObjectsInList" Destination="_base.o_NrOfObjectsInList" Vertices="(1216,510),(1044,510),"/>
			<Connection Source="_base.p_FirstObject" Destination="this.p_FirstObject" Vertices="(218,330),(38,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using Wewo_LinkedListControlBase

Wewo_EnumTranslator : CLASS
: Wewo_LinkedListControlBase
  //Servers:
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION GetEnumObjectPtr
		VAR_INPUT
			enumId 	: UDINT;
		END_VAR
		VAR_OUTPUT
			p_object 	: ^Wewo_EnumBase;
		END_VAR;
	
	FUNCTION GLOBAL TranslateEnumText
		VAR_INPUT
			enumListId 	: UDINT;
			enumId 	: DINT;
			p_columnIdx 	: ^UDINT;
		END_VAR
		VAR_OUTPUT
			p_enumString 	: ^CHAR;
		END_VAR;
	
	FUNCTION GLOBAL GetVarName
		VAR_INPUT
			enumListId 	: UDINT;
		END_VAR
		VAR_OUTPUT
			p_VarName 	: ^CHAR;
		END_VAR;
	
	FUNCTION SearchForColumnIdx
		VAR_INPUT
			columnIdx 	: UDINT;
		END_VAR
		VAR_OUTPUT
			p_Object 	: ^Wewo_EnumBase;
		END_VAR;
	
	FUNCTION GLOBAL GetVarNameBasedOnColumnIdx
		VAR_INPUT
			columnIdx 	: UDINT;
		END_VAR
		VAR_OUTPUT
			p_VarName 	: ^CHAR;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Wewo_EnumTranslator::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_WEWO_ENUMTRANSLATOR
0$UINT, 0$UINT, (SIZEOF(::Wewo_EnumTranslator))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(195451389), "Wewo_EnumTranslator", //Class
TO_UDINT(2533728641), "Wewo_LinkedListControlBase", 0$UINT, 11$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_Wewo_EnumTranslator 12

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Wewo_EnumTranslator] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Wewo_EnumTranslator::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= Wewo_LinkedListControlBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= WewoBase::ToObject.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, WewoBase::ToObject.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_Wewo_EnumTranslator;
	vmt.CmdTable.Init		:= #Init();
	WewoBase::ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF WewoBase::ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

#pragma usingLtd Wewo_EnumBase

//{{LSL_IMPLEMENTATION
#pragma using Wewo_EnumBase

FUNCTION VIRTUAL GLOBAL Wewo_EnumTranslator::Init
  Wewo_LinkedListControlBase::Init();
  
  if (initCnt >= 12) then
    
  end_if;

END_FUNCTION


FUNCTION Wewo_EnumTranslator::GetEnumObjectPtr
	VAR_INPUT
		enumId 	: UDINT;
	END_VAR
	VAR_OUTPUT
		p_object 	: ^Wewo_EnumBase;
	END_VAR
  
  p_object $pVoid := SearchNextTree(ObjectId:=enumId);
  
END_FUNCTION


FUNCTION GLOBAL Wewo_EnumTranslator::TranslateEnumText
	VAR_INPUT
		enumListId 	: UDINT;
		enumId 	: DINT;
		p_columnIdx 	: ^UDINT;
	END_VAR
	VAR_OUTPUT
		p_enumString 	: ^CHAR;
	END_VAR

	VAR
		p_object 	: ^Wewo_EnumBase;
    
	END_VAR
  
  if p_columnIdx <> NIL then
    // Valid parameter
    p_enumString    := NIL;      // Default return NIL until we found an enum text.
    p_columnIdx^    := 0;
    
    // Search object containing the texttranslations
    p_object $pVoid := SearchNextTree(ObjectId:=enumListId);

    if p_object <> NIL then
      // Enum object found
      p_enumString := p_object^.GetEnumString(id:=enumId);
      p_columnIdx^ := p_object^.columnIdx.Read();
 
    end_if;

  end_if;

END_FUNCTION


FUNCTION GLOBAL Wewo_EnumTranslator::GetVarName
	VAR_INPUT
		enumListId 	: UDINT;
	END_VAR
	VAR_OUTPUT
		p_VarName 	: ^CHAR;
	END_VAR

	VAR
		p_object 	: ^Wewo_EnumBase;
    
	END_VAR
  
  p_VarName := NIL;
  
  // Search selected object containing the text translations
  p_object $pVoid := SearchNextTree(ObjectId:=enumListId);

  if p_object <> NIL then
    // Enum object found
    p_VarName := p_object^.GetEnumVarName();

  end_if;
  
END_FUNCTION


FUNCTION GLOBAL Wewo_EnumTranslator::GetVarNameBasedOnColumnIdx
	VAR_INPUT
		columnIdx 	: UDINT;
	END_VAR
	VAR_OUTPUT
		p_VarName 	: ^CHAR;
	END_VAR

	VAR
		p_object 	: ^Wewo_EnumBase;
    
	END_VAR
  
  p_VarName := NIL;        // Default return NIL until we found object
  // Search selected object containing the text translations
  p_object $pVoid := SearchForColumnIdx(columnIdx:=columnIdx);

  if p_object <> NIL then
    // Enum object found
    p_VarName := p_object^.GetEnumVarName();

  end_if;
  
END_FUNCTION



(***************************************************************
Wewo_EnumTranslator::SearchForColumnIdx

Description:    Searches an object in linked list via Next pointer.
                Objects should have selected ColumnIdx.
              
Parameter:      ColumnIdx.
                   
Return:         pointer to object if found
                NIL if not found
***************************************************************)

FUNCTION Wewo_EnumTranslator::SearchForColumnIdx
	VAR_INPUT
		columnIdx 	: UDINT;
	END_VAR
	VAR_OUTPUT
		p_Object 	: ^Wewo_EnumBase;
	END_VAR
  VAR
  	Idx : UDINT;
  END_VAR
    
  p_Object := p_FirstObject$^Wewo_EnumBase;
  
  while (p_Object <> NIL) do
  
    Idx := p_Object^$Wewo_EnumBase.columnIdx.Read();
    
    if (columnIdx = Idx) then
      exit;
      
    end_if;
    
    p_Object$pVoid:= p_object^$Wewo_EnumBase.GetNextObjectPtr();

  end_while;

END_FUNCTION
