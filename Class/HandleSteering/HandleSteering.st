//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "HandleSteering"
	Revision           = "0.0"
	GUID               = "{EF197718-A109-4077-95AE-D49C9EE27F1D}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(562,120)">
	<Channels>
		<Server Name="Actual" GUID="{473A4C00-D915-4E60-9212-EE5E1C802FF4}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="BusyReferencing" GUID="{CDA7EF32-C0BB-427D-A5E2-5A13897E3547}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ClassSvr" GUID="{9E657C0E-04FA-4F5F-98F6-E9FD6563A094}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="IsReferenced" GUID="{417B68ED-A2C0-408B-9C7C-86E689130B98}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Setpoint" GUID="{3FCD91DE-53CE-407D-8215-A738BA38BB28}" Visualized="false" Initialize="false" WriteProtected="false" Retentive="false"/>
	</Channels>
</Class>
*)
HandleSteering : CLASS
	TYPE
	  eDriveMode :  //! <Type Public="true" Name="eDriveMode"/>
	  (
	    dm_Idle,
	    dm_Manual,
	    dm_Auto,
	    dm_Referencing,
	    dm_EmergencyStop
	  )$UDINT;
#pragma pack(push, 1)
	  tDriveStatus : STRUCT  //! <Type Public="true" Name="tDriveStatus"/>
	    ds_DriveMode : eDriveMode;
	    ds_Referenced : DINT;
	    ds_Setpoint : REAL;
	    ds_Actual : REAL;
	    ds_FaultCode : DINT;
	    ds_CommunicationOK : DINT;
	    ds_EstopOK : DINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Setpoint 	: SvrCh_REAL;
	Actual 	: SvrCh_REAL;
	IsReferenced 	: SvrCh_DINT;
	BusyReferencing 	: SvrCh_DINT;
  //Clients:
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL GetReferenced
		VAR_OUTPUT
			returnValue 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GetDriveStatus
		VAR_OUTPUT
			returnValue 	: tDriveStatus;
		END_VAR;
	
	FUNCTION VIRTUAL _forwardSetpoint
		VAR_INPUT
			inputSetpoint 	: REAL;
		END_VAR;
	
	FUNCTION VIRTUAL _getActual
		VAR_OUTPUT
			returnValue 	: REAL;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL StartReferencing;
	
	FUNCTION VIRTUAL GLOBAL Setpoint::Write
		VAR_INPUT
			input (EAX) 	: REAL;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: REAL;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL Actual::Read
		VAR_OUTPUT
			output (EAX) 	: REAL;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB HandleSteering::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_HANDLESTEERING
0$UINT, 0$UINT, (SIZEOF(::HandleSteering))$UINT, 
5$UINT, 0$UINT, 0$UINT, 
TO_UDINT(934856050), "HandleSteering", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::HandleSteering.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::HandleSteering.Setpoint.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3111452154), "Setpoint", 
(::HandleSteering.Actual.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3531955618), "Actual", 
(::HandleSteering.IsReferenced.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3281726777), "IsReferenced", 
(::HandleSteering.BusyReferencing.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3952360337), "BusyReferencing", 
//Clients:
END_FUNCTION


#define USER_CNT_HandleSteering 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_HandleSteering] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION HandleSteering::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_HandleSteering, pCmd := #vmt.CmdTable);
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #GetReferenced();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #GetDriveStatus();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #_forwardSetpoint();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #_getActual();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #StartReferencing();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Setpoint.pMeth			:= StoreMethod( #M_RD_DIRECT(), #Setpoint::Write() );
	IF Setpoint.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Actual.pMeth			:= StoreMethod( #Actual::Read(), #M_NO_F() );
	IF Actual.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL HandleSteering::GetReferenced
  #pragma warning(disable: 73);
  #pragma warning(disable: 76);
	VAR_OUTPUT
		returnValue 	: DINT;
	END_VAR
  #pragma warning(default: 73);
  #pragma warning(default: 76);
END_FUNCTION


FUNCTION VIRTUAL GLOBAL HandleSteering::Setpoint::Write
	VAR_INPUT
		input (EAX) 	: REAL;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: REAL;
	END_VAR

	Setpoint := input;
  _forwardSetpoint(Setpoint);
	result := Setpoint;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL HandleSteering::Actual::Read
	VAR_OUTPUT
		output (EAX) 	: REAL;
	END_VAR

  Actual := _getActual();
	output := Actual;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL HandleSteering::GetDriveStatus
  #pragma warning(disable: 73);
  #pragma warning(disable: 76);
	VAR_OUTPUT
		returnValue 	: tDriveStatus;
	END_VAR
  #pragma warning(default: 73);
  #pragma warning(default: 76);
END_FUNCTION


FUNCTION VIRTUAL HandleSteering::_forwardSetpoint
  #pragma warning(disable: 73);
  #pragma warning(disable: 76);
	VAR_INPUT
		inputSetpoint 	: REAL;
	END_VAR
  #pragma warning(default: 73);
  #pragma warning(default: 76);
END_FUNCTION


FUNCTION VIRTUAL HandleSteering::_getActual
	VAR_OUTPUT
		returnValue 	: REAL;
	END_VAR

  returnValue := Actual;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL HandleSteering::StartReferencing

END_FUNCTION
