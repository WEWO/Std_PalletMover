//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "CanOpenWewoBase"
	Revision           = "0.1"
	GUID               = "{31C0B373-D26D-407D-955A-796FB894FB0E}"
	RealtimeTask       = "false"
	CyclicTask         = "true"
	DefCyclictime      = "1 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(540,240)">
	<Channels>
	</Channels>
	<RevDoku>
		<Owner Company="Riwo Engineering B.V." Author="A.J. Mensink"/>
		<Dokumentation Revision="0.1" Date="2014-03-07" Author="A.J. Mensink" Company="Riwo Engineering B.V." Description="Added new variable: TxDataRiwo"/>
		<Dokumentation Revision="0.0" Date="2014-03-07" Author="A.J. Mensink" Company="Riwo Engineering B.V." Description="First Creation"/>
	</RevDoku>
	<Network Name="CanOpenWewoBase">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{E5D8A2B4-B053-4A0C-9C64-4ED575216687}"
				Class      = "CanOpenBase"
				Position   = "(218,120)"
				Visualized = "true">
				<Channels>
					<Server Name="Server0"/>
					<Client Name="cNode"/>
					<Client Name="ConfigData"/>
					<Client Name="Driver"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Server0" Destination="_base.Server0" Vertices="(946,210),(774,210),"/>
			<Connection Source="_base.Driver" Destination="this.Driver" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.cNode" Destination="this.cNode" Vertices="(218,270),(38,270),"/>
			<Connection Source="_base.ConfigData" Destination="this.ConfigData" Vertices="(218,330),(38,330),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using CanOpenBase

CanOpenWewoBase : CLASS
: CanOpenBase
  //Servers:
  //Clients:
  //Variables:
		CanTxData 	: CanObjStr;
  //Functions:
	
	FUNCTION GLOBAL SendPDO
		VAR_INPUT
			PdoId 	: HINT;
			Bytes 	: BYTE;
			Value1 	: INT;
			Value2 	: INT;
			Value3 	: INT;
			Value4 	: INT;
		END_VAR
		VAR_OUTPUT
			State 	: DINT;
		END_VAR;
	
	FUNCTION GLOBAL GetPDO
		VAR_INPUT
			PdoId 	: HINT;
		END_VAR
		VAR_OUTPUT
			pCanData 	: ^CanObjStr;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB CanOpenWewoBase::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CANOPENWEWOBASE
0$UINT, 1$UINT, (SIZEOF(::CanOpenWewoBase))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(2527060916), "CanOpenWewoBase", //Class
TO_UDINT(4284412609), "CanOpenBase", 1$UINT, 6$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_CanOpenWewoBase 21

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_CanOpenWewoBase] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION CanOpenWewoBase::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= CanOpenBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= CanBase::Server0.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, CanBase::Server0.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_CanOpenWewoBase;
	CanBase::Server0.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF CanBase::Server0.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION GLOBAL CanOpenWewoBase::SendPDO
	VAR_INPUT
		PdoId 	: HINT;
		Bytes 	: BYTE;
		Value1 	: INT;
		Value2 	: INT;
		Value3 	: INT;
		Value4 	: INT;
	END_VAR
	VAR_OUTPUT
		State 	: DINT;
	END_VAR
   
     // send object
    CanTxData.Id			        := PdoId + to_uint(cNode);
    CanTxData.Size			    := Bytes;
    CanTxData.Data[1]$Int	:= Value1;
    CanTxData.Data[3]$Int	:= Value2;
    CanTxData.Data[5]$Int	:= Value3;
    CanTxData.Data[7]$Int	:= Value4;

    State	:= SendCanObj( #CanTxData);
    If State>= 0 Then
      tPdoSend	:= Ops.tAbsolute;
    End_If;
  
END_FUNCTION


FUNCTION GLOBAL CanOpenWewoBase::GetPDO
	VAR_INPUT
		PdoId 	: HINT;
	END_VAR
	VAR_OUTPUT
		pCanData 	: ^CanObjStr;
	END_VAR
  
    pCanData := GetCanObj( ObjNr:=( PdoId + To_Uint( cNode)));
  
END_FUNCTION
