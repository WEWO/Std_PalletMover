//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "Wewo_EnumBase"
	Revision           = "0.0"
	GUID               = "{2E4D2164-F6B0-4966-B281-B6B63AAC9B34}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(654,120)"
	Comment            = "reference table for enum variables.&#13;&#10;&#13;&#10;ObjectName is used to translate objectId into variablename string&#13;&#10;&#13;&#10;Server columnIdx:  Select which column should be used to write enum text&#13;&#10;">
	<Channels>
		<Server Name="columnIdx" GUID="{BE43E20F-ECCE-4856-8DE5-98281B08BC2E}" Visualized="false" Initialize="true" DefValue="0" WriteProtected="false" Retentive="false" Comment="Select which column should be used to write enum text&#13;&#10;idx = -1 Value not written&#13;&#10;idx &gt;=0  write value"/>
	</Channels>
	<Network Name="Wewo_EnumBase">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{7E3F5391-0C4E-47D9-8AEE-DADDF53F429B}"
				Class      = "Wewo_LinkedObjectBase"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="m_Id"/>
					<Server Name="m_p_Name"/>
					<Server Name="o_ErrorWarningStatus"/>
					<Server Name="ObjectStatus"/>
					<Server Name="ToObject"/>
					<Client Name="c_Group"/>
					<Client Name="op_LogData"/>
					<Client Name="p_NextObject"/>
					<Client Name="p_PreviousObject"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ToObject" Destination="_base.ToObject" Vertices="(1060,210),(888,210),"/>
			<Connection Source="this.ObjectStatus" Destination="_base.ObjectStatus" Vertices="(1060,270),(888,270),"/>
			<Connection Source="this.o_ErrorWarningStatus" Destination="_base.o_ErrorWarningStatus" Vertices="(1060,330),(888,330),"/>
			<Connection Source="this.m_Id" Destination="_base.m_Id" Vertices="(1060,390),(888,390),"/>
			<Connection Source="this.m_p_Name" Destination="_base.m_p_Name" Vertices="(1060,450),(888,450),"/>
			<Connection Source="_base.op_LogData" Destination="this.op_LogData" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.p_NextObject" Destination="this.p_NextObject" Vertices="(218,390),(38,330),"/>
			<Connection Source="_base.c_Group" Destination="this.c_Group" Vertices="(218,270),(38,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using Wewo_LinkedObjectBase

Wewo_EnumBase : CLASS
: Wewo_LinkedObjectBase
	TYPE
#pragma pack(push, 1)
	  t_EnumStruct : STRUCT
	    id : DINT;
	    p_String : ^CHAR;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
  //Servers:
	columnIdx 	: SvrCh_UDINT;
  //Clients:
  //Variables:
		p_StartOfTable 	: ^t_EnumStruct;
		nrOfEntries 	: UDINT;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL InstallEnumTable;
	
	FUNCTION VIRTUAL SetTableEntry
		VAR_INPUT
			idx 	: UDINT;
			id 	: DINT;
			p_String 	: ^CHAR;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GetEnumString
		VAR_INPUT
			id 	: DINT;
		END_VAR
		VAR_OUTPUT
			p_String 	: ^CHAR;
		END_VAR;
	
	FUNCTION GLOBAL GetEnumVarName
		VAR_OUTPUT
			p_name 	: ^CHAR;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL columnIdx::Write
		VAR_INPUT
			input (EAX) 	: UDINT;
		END_VAR
		VAR_OUTPUT
			result (EAX) 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Wewo_EnumBase::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_WEWO_ENUMBASE
0$UINT, 0$UINT, (SIZEOF(::Wewo_EnumBase))$UINT, 
1$UINT, 0$UINT, 0$UINT, 
TO_UDINT(513713854), "Wewo_EnumBase", //Class
TO_UDINT(3571739257), "Wewo_LinkedObjectBase", 0$UINT, 10$UINT, //Baseclass
//Servers:
(::Wewo_EnumBase.columnIdx.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2063936282), "columnIdx", 
//Clients:
END_FUNCTION


#define USER_CNT_Wewo_EnumBase 18

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Wewo_EnumBase] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Wewo_EnumBase::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= Wewo_LinkedObjectBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= WewoBase::ToObject.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, WewoBase::ToObject.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_Wewo_EnumBase;
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[15]		:= #InstallEnumTable();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[16]		:= #SetTableEntry();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[17]		:= #GetEnumString();

#pragma warning (default : 74)
	WewoBase::ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF WewoBase::ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	columnIdx.pMeth			:= StoreMethod( #M_RD_DIRECT(), #columnIdx::Write() );
	IF columnIdx.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION

(*
// TextTableROM is inplemented in derived class  
FUNCTION TAB Wewo_EnumBase::TextTableROM
// IdNr,            *pString,
   0  $TYPE_IDX0,   "String 0"  $TYPE_IDX1,  
   0  $TYPE_IDX0,   NIL         $TYPE_IDX1            // Close Table

END_FUNCTION
*)



FUNCTION VIRTUAL GLOBAL Wewo_EnumBase::Init
  Wewo_LinkedObjectBase::Init();
  
  if (initCnt >= 12) then
    columnIdx := columnIdx.Read();
    
    InstallEnumTable();

  end_if;
  
  
END_FUNCTION


// InstallEnumTable() Has to be defined/filled in derviced class
FUNCTION VIRTUAL Wewo_EnumBase::InstallEnumTable

  // Init table administration
  p_StartOfTable := NIL;
  nrOfEntries   := 0;
  
  // Install entries
  // SetTableEntry(idx:=0, id := 0, p_String := "string text");
  

END_FUNCTION


FUNCTION VIRTUAL Wewo_EnumBase::SetTableEntry
	VAR_INPUT
		idx 	: UDINT;
		id 	: DINT;
		p_String 	: ^CHAR;
	END_VAR

  VAR
  	p_Entry : ^t_EnumStruct;
  END_VAR

  if ( (p_StartOfTable <> NIL) L_AND (idx < nrOfEntries) ) then
    p_Entry           := p_StartOfTable + idx * sizeof(t_EnumStruct);
    p_Entry^.id       := id;
    p_Entry^.p_String := p_String;
    
  else
    WriteActiveErrorWarning(IntErrorWarningId:=MSGID_INVALID_OBJECT, LogLevel:=LL_ERROR_CRITICAL, p_msg:="Wewo_EnumBase::SetTableEntry");
    
  end_if;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Wewo_EnumBase::GetEnumString
	VAR_INPUT
		id 	: DINT;
	END_VAR
	VAR_OUTPUT
		p_String 	: ^CHAR;
	END_VAR
  
  VAR
  	p_Entry : ^t_EnumStruct;
    idx     : UDINT;
    
  END_VAR

  p_String := NIL;                          // Default nothing found
  
  if (p_StartOfTable <> NIL) then 
    p_Entry := p_StartOfTable;
    idx     := 0;
   
    while (idx < nrOfEntries) do
      // An entry available
      if (p_Entry^.id = id) then
        // match found
        p_String :=  p_Entry^.p_String;       // Set return value
        
        exit;                                 // Exit loop  
        
      end_if;
    
      // Next extry
      idx += 1;
      p_Entry := (p_StartOfTable$UDINT + (idx*sizeof(t_EnumStruct))$UDINT)$^t_EnumStruct;
      
    end_while;

  end_if;  
  
END_FUNCTION


FUNCTION GLOBAL Wewo_EnumBase::GetEnumVarName
	VAR_OUTPUT
		p_name 	: ^CHAR;
	END_VAR
  
  p_name := m_p_Name;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL Wewo_EnumBase::columnIdx::Write
	VAR_INPUT
		input (EAX) 	: UDINT;
	END_VAR
	VAR_OUTPUT
		result (EAX) 	: UDINT;
	END_VAR

	columnIdx := input;
 	result := columnIdx;

END_FUNCTION
