//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "BasicLiftController"
	Revision           = "0.0"
	GUID               = "{69B1F78E-1D68-4E7D-91CA-AA3338DCF151}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(570,120)">
	<Channels>
	</Channels>
	<Network Name="BasicLiftController">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{F3D508D1-D542-4546-82A9-337E1A377784}"
				Class      = "Controller"
				Position   = "(218,120)"
				Visualized = "true"
				Remotely   = "true">
				<Channels>
					<Server Name="Signal_Input"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.Signal_Input" Destination="_base.Signal_Input" Vertices="(690,210),(518,210),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using Controller

BasicLiftController : CLASS
: Controller
  //Servers:
  //Clients:
  //Variables:
  //Functions:
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB BasicLiftController::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_BASICLIFTCONTROLLER
0$UINT, 0$UINT, (SIZEOF(::BasicLiftController))$UINT, 
0$UINT, 0$UINT, 0$UINT, 
TO_UDINT(1710225888), "BasicLiftController", //Class
TO_UDINT(1198357413), "Controller", 1$UINT, 44$UINT, //Baseclass
//Servers:
//Clients:
END_FUNCTION


#define USER_CNT_BasicLiftController 17

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_BasicLiftController] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION BasicLiftController::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= Controller::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= Controller::Signal_Input.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, Controller::Signal_Input.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_BasicLiftController;
	Controller::Signal_Input.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF Controller::Signal_Input.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION
