//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)

//{{LSL_DEFINES
//#Define cNoNmtIfOk
#Define cCommTo                   1000    // 1000
#Define cHeartBeat                150     // 1000 Every 1 Sec.
#define COMM_TIMEOUT              1000    // ms before timeout
#define PDO1_SEND_INTERVAL        40      // 100 ms
#define TIMEOUTDELAY              15000    // Delay before checking for a communication timeout.
#define REFERENCETIMEOUT          30 SEC  // 
#define FUSE_BAD_TIME             4 SEC
#define MAX_TIME_DRIVE_MODE_REQ   150 //ms
//}}LSL_DEFINES

//{{LSL_DECLARATION

(*!
<Class
	Name               = "Curtis_Base"
	Revision           = "0.0"
	GUID               = "{FE63C9DA-9A06-4F5D-935A-FA60F650E345}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	DefCyclictime      = "5 ms"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	IconPath           = ".\Class\Curtis_1232E_FR\curtis.ico"
	SharedCommandTable = "true"
	Objectsize         = "(510,300)"
	Comment            = "CAN Message for Curtis Drives">
	<Channels>
		<Server Name="Active" GUID="{E02DEBBC-7E3F-4143-84DE-96BF184AA95F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="AI_BrakePot" GUID="{5ABBEF98-8C1E-436F-B6FE-4D84A5473C87}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="AI_ThrottlePot" GUID="{84AAC9B6-F30F-4297-9F59-06E568E756DD}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="AutoAccelTime" GUID="{C11818B2-22E6-4952-BD27-40951F6A9FDE}" Visualized="true" Initialize="true" DefValue="100" WriteProtected="false" Retentive="SRam" Comment="0,1 second acceleration time"/>
		<Server Name="AutoAct" GUID="{71A4DA53-B021-415B-8749-5B5B80990BEA}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="AutoDecelTime" GUID="{E079928E-2871-43EB-807E-9A994C074402}" Visualized="true" Initialize="true" DefValue="10" WriteProtected="false" Retentive="SRam" Comment="0,1 second acceleration time"/>
		<Server Name="AutomaticSetpoint" GUID="{220F0661-5736-490E-A013-F8D099BED024}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="AutoSetp" GUID="{12E696A5-138D-4008-BF3B-E11EC1BC3B0C}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="BDI" GUID="{C5C0854C-850F-4818-BDB4-41E67BD14F3B}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="BrakePotSigned" GUID="{57B72980-1A70-41EC-8AA0-36129E60F601}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Server Name="Capacitor_Voltage" GUID="{57B00527-CEBB-4876-8D98-ADD0BC997B2E}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ClassSvr" GUID="{EF73DCB2-9A7B-43EA-9939-2CE9D4D522F6}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="CommunicationOk" GUID="{20DE64D4-5AF4-432B-86CD-153F8D8314FA}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="DriveMode" GUID="{B0F6266F-01CC-44E8-AF19-A513140994A2}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="DriveModeRequest" GUID="{D4787DD0-1E22-4944-8D4F-D73306233DE0}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="EmStopOk" GUID="{4555A2C8-B720-45AB-8F60-842F0FF90606}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Enabled" GUID="{0FA36B81-B076-437B-A2E2-26E7BA98F233}" Visualized="true" Initialize="true" DefValue="1" WriteProtected="false" Retentive="File"/>
		<Server Name="I_DigitalOut6" GUID="{2D28733E-3DF8-4986-85A7-4E2BE7FA416F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_14"/>
		<Server Name="I_DigitalOut7" GUID="{7F58FDBB-38F2-483D-8440-C08846660A1C}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_15"/>
		<Server Name="I_Driver1" GUID="{76167CC1-A32D-4EE6-B079-EC5B5151DEA0}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_9&#13;&#10;Auger_1 - bI_SP_HighLow"/>
		<Server Name="I_Driver2" GUID="{BD533B6B-08F4-43DF-9DA4-E8BB63AC3D3D}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_10&#13;&#10;Auger_1 - bI_AugerOnOff"/>
		<Server Name="I_Driver3" GUID="{26E0DA42-E561-4A58-94BE-4E0856775C47}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_11&#13;&#10;Auger_1 - bSP_HighLow"/>
		<Server Name="I_Driver4" GUID="{1A43B57C-5ADE-4C41-A5B4-447BF1BC4D22}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_12&#13;&#10;Auger_1 - bAugerOnOff"/>
		<Server Name="I_PropDriver" GUID="{74AFAAB6-1351-4119-9D24-4407122111F8}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Sw_13&#13;&#10;Pin 2"/>
		<Server Name="I_Switch1" GUID="{6CC22A5D-1830-4C5C-AF0E-8225BB6F1A44}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 24 - Switch 1"/>
		<Server Name="I_Switch16" GUID="{F7D89C8B-274F-451F-9561-B424B47FD77D}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 14 - Switch 16"/>
		<Server Name="I_Switch2" GUID="{7860B4C5-E6E4-43F5-BC4C-492A2B397090}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 8 - Switch 2"/>
		<Server Name="I_Switch3" GUID="{42A87756-0352-41EF-BCEF-0077927CDFC9}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 9 - Switch 3"/>
		<Server Name="I_Switch4" GUID="{1B70DBA4-F375-41DE-BE2A-E8E262F60A20}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 10 - Switch 4"/>
		<Server Name="I_Switch5" GUID="{40D0DC1C-50C2-4E1A-B090-A59B3CAC0DE7}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 11 - Switch 5"/>
		<Server Name="I_Switch6" GUID="{490EB4DC-E202-4F86-9CF6-C2D9A606E898}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 12 - Switch 6"/>
		<Server Name="I_Switch7" GUID="{C65C0A11-9A34-4AEF-8E53-74B43EAAC8C1}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 22 - Switch 7"/>
		<Server Name="I_Switch8" GUID="{7B431879-8824-4868-9E55-8C84CBF989BE}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Pin 33 - Switch 8"/>
		<Server Name="InterlockExternal1" GUID="{3F813C8C-2E46-48BE-850C-4D835EE58BA9}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="InterlockExternal2" GUID="{27B5E7E2-5F52-458B-B237-87A6E409B468}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="InterlockFeedback" GUID="{8A2813C1-7D0F-4310-BA96-45B6393A755F}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="MotorCurrent" GUID="{BB4A8B58-2D30-4301-A5C0-81C5D76942B3}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="MotorRPM" GUID="{06BC2752-401F-4EBB-AFE5-0E23A81BB229}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false" Comment="Speed of Motor"/>
		<Server Name="MotorTemperature" GUID="{74B7269C-CCB4-4F97-B845-146D26B284C2}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="QD_DigitalOut6" GUID="{7877E2D2-AEB9-4814-BC24-8B531C636EC6}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Auger_1 - Horn"/>
		<Server Name="QD_DigitalOut7" GUID="{A72EB420-66BE-4017-80F7-1EB621F51019}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Auger_1 - bDrive_OnOff"/>
		<Server Name="QD_Driver1" GUID="{7A16E687-B8EE-4046-9C4A-2A989349804F}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Auger_1 - Pin 6 - bQ_Actu_L_In"/>
		<Server Name="QD_Driver2" GUID="{E57B2365-5AE3-4CED-B67B-5629DFCB1D83}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Auger_1 - Pin 5 - bQ_Actu_L_Out"/>
		<Server Name="QD_Driver3" GUID="{D079DC19-8E17-4849-BA7B-FEF8C458AFD2}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Auger_1 - Pin 4 - bQ_Actu_R_In"/>
		<Server Name="QD_Driver4" GUID="{B836D6DD-A8B9-4AE9-A2C6-276E40195A86}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false" Comment="Auger_1 - Pin 3 - bQ_Actu_R_Out"/>
		<Server Name="QD_PropDriver" GUID="{0FF1C201-0E80-48E8-9D0C-9202FEB13479}" Visualized="true" Initialize="false" WriteProtected="false" Retentive="false"/>
		<Server Name="Referenced" GUID="{6FFFCA5E-4CE6-44BE-9375-C41F750D3A4E}" Visualized="true" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ThrottlePotSigned" GUID="{A3316362-08B4-4BD5-B881-2676AFECC746}" Visualized="true" Initialize="true" WriteProtected="false" Retentive="File"/>
		<Client Name="_CanOpenBaseRiwo" Required="true" Internal="true"/>
		<Client Name="AlarmStartId" Required="true" Internal="false"/>
		<Client Name="NodeId" Required="true" Internal="false"/>
		<Client Name="objDriver" Required="false" Internal="false"/>
	</Channels>
	<Separators>
		<Servers>
			<SepChn Position="34"/>
			<SepChn Position="38"/>
		</Servers>
	</Separators>
	<RevDoku>
		<Owner Company="RIWO Engineering BV" Author="P vd Voort"/>
		<Dokumentation Revision="0.0" Date="2022-08-29" Author="P vd Voort" Company="RIWO Engineering BV" Description="First Build Up"/>
	</RevDoku>
	<Network Name="Curtis_Base">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_CanOpenBaseRiwo"
				GUID       = "{66693E01-CDAC-44BB-9F0B-54F1569B382E}"
				Class      = "CanOpenBaseRiwo"
				Position   = "(390,240)"
				Visualized = "true"
				CyclicTime = "1 ms">
				<Channels>
					<Server Name="Server0"/>
					<Client Name="cNode" Value="1"/>
					<Client Name="ConfigData"/>
					<Client Name="Driver"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this._CanOpenBaseRiwo" Destination="_CanOpenBaseRiwo.Server0"/>
			<Connection Source="_CanOpenBaseRiwo.Driver" Destination="this.objDriver" Vertices="(390,330),(38,330),"/>
			<Connection Source="_CanOpenBaseRiwo.cNode" Destination="this.NodeId" Vertices="(390,390),(38,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
Curtis_Base : CLASS
	TYPE
#pragma pack(push, 1)
	  CurtisMessageConfig : STRUCT
	    Byte0 : BSINT
	    [
	      1 Q1,
	      2 Q1not,
	      3 Q2,
	      4 Q2not,
	      5 Bit4,
	      6 Bit5,
	      7 Bit6,
	      8 Bit7,
	    ];
	    Byte1 : BSINT
	    [
	      1 InputState_A,
	      2 InputState_B,
	      3 InputState_C,
	      4 InputState_D,
	      5 Bit4,
	      6 Bit5,
	      7 Bit6,
	      8 InputState_StandBy,
	    ];
	    Byte2 : BSINT
	    [
	      1 Bit0_SwFldQ1,
	      2 Bit1_SwFldQ1,
	      3 Bit2_SwFldQ1,
	      4 Bit3_SwFldQ1,
	      5 Bit4_SwFldQ1,
	      6 Bit5,
	      7 Bit6,
	      8 Bit7,
	    ];
	    Byte3 : BSINT
	    [
	      1 Bit0_SwFldQ2,
	      2 Bit1_SwFldQ2,
	      3 Bit2_SwFldQ2,
	      4 Bit3_SwFldQ2,
	      5 Bit4_SwFldQ2,
	      6 Bit5,
	      7 Bit6,
	      8 Bit7,
	    ];
	    Byte4 : BSINT
	    [
	      1 Bit0_DeviceStatus,
	      2 Bit1_DeviceStatus,
	      3 Bit2_DeviceStatus,
	      4 Bit3_DeviceStatus,
	      5 Bit4,
	      6 Bit5,
	      7 Bit6,
	      8 Bit7,
	    ];
	    Byte5 : SINT;
	    Byte6and7 : INT;
	  END_STRUCT;
#pragma pack(pop)
	  CurtisSendConfig : BSINT
	  [
	    1 VirtInp_A,
	    2 VirtInp_B,
	    3 VirtInp_C,
	    4 VirtInp_D,
	    5 Bit4,
	    6 Bit5,
	    7 Bit6,
	    8 VirtInp_Standby,
	  ];
	  eCurtisAlarms :
	  (
	    ca_MainContactor_Welded:=1,
	    ca_MainContactor_NotClosed:=2,
	    ca_PotLow:=3,
	    ca_ThrottleLow:=4,
	    ca_ThrottleHigh:=5,
	    ca_Pot2Low:=6,
	    ca_Pot2High:=7,
	    ca_EepromFail:=8,
	    ca_SequenceFault:=9,
	    ca_UnderVoltage:=10,
	    ca_OverVoltage:=11,
	    ca_UnderVoltage_CutBack:=12,
	    ca_OverVoltage_CutBack:=13,
	    ca_FuseBad:=14,
	    ca_ControllerTemp_CutBack:=15,
	    ca_Controller_UnderTemp:=16,
	    ca_Controller_OverTemp:=17,
	    ca_Coil1_Short:=18,
	    ca_Coil2_Short:=19,
	    ca_Coil3_Short:=20,
	    ca_Coil4_Short:=21,
	    ca_PD_Short:=22,
	    ca_Main_Short:=23,
	    ca_EmBrake_Short:=24,
	    ca_PreCharge_Failed:=25,
	    ca_Digital6_OverCurrent:=26,
	    ca_Digital7_OverCurrent:=27,
	    ca_Controller_OverCurrent:=28,
	    ca_CurrentSensor_Fault:=29,
	    ca_MotorTemp_CutBack:=30,
	    ca_ParameterChange_Fault:=31,
	    ca_Motor_Open:=32,
	    ca_ExtSupply_OutofRange:=33,
	    ca_MotorTemp_SensorFault:=34,
	    ca_VC1_RunTime:=35,
	    ca_5vSupply_Failure:=36,
	    ca_OSGeneral:=37,
	    ca_PDO_Timeout:=38,
	    ca_Encoder_Fault:=39,
	    ca_StallDetected:=40,
	    ca_Com_Timeout:=41,
	    ca_NotRef:=42,
	    ca_RevHpd:=43,
	    ca_NotEnabled:=44,
	    ca_MotorType_Fault:=45,
	    ca_SuperVision:=46,
	    ca_MotorCharacter:=47,
	    ca_PumpHardware:=48,
	    ca_NotDefined_1:=49,
	    ca_VCL_Mismatch:=50,
	    ca_EmBrake_Failed:=51,
	    ca_Encoder_Lose:=52,
	    ca_Rev_Timeout:=53,
	    ca_Dual_Fault:=54,
	    ca_TractionController_Fault:=55,
	    ca_Illegal_ModelNumber:=56,
	    ca_PumpOverCurrent:=57,
	    ca_PumpBdi:=58,
	    ca_PumpHpd:=59,
	    ca_DualMotor_Par_MisMatch:=60,
	    ca_NotDefined_2:=61,
	    ca_NotDefined_3:=62,
	    ca_NotDefined_4:=63,
	    ca_EncoderPulse:=64
	  )$UDINT;
	  eCurtisDriveMode :  //! <Type Public="true" Name="eCurtisDriveMode"/>
	  (
	    cdm_Idle,
	    cdm_TimeOut,
	    cdm_EmergencyStop,
	    cdm_Referencing,
	    cdm_Manual,
	    cdm_Auto,
	    cdm_DriveReset,
	    cdm_ExtInterlockReset
	  )$UDINT;
	  eCurtisDriveModeRequest :  //! <Type Public="true" Name="eCurtisDriveModeRequest"/>
	  (
	    cdmr_NoReq:=4294967295,
	    cdmr_Idle,
	    cdmr_Reference,
	    cdmr_Manual:=2,
	    cdmr_Automatic:=3,
	    cdmr_ResetDrive:=4,
	    cdmr_ResetExtInterlock:=5
	  )$DINT;
#pragma pack(push, 1)
	  Errors : STRUCT
	    Error1 : DINT;
	    Error2 : DINT;
	    Error3 : DINT;
	    Error4 : DINT;
	    Error5 : DINT;
	    Error6 : DINT;
	    Error7 : DINT;
	    NumberOfErrors : DINT;
	  END_STRUCT;
#pragma pack(pop)
	  FuncComm :
	  (
	    _StandBy,
	    _Read,
	    _Write,
	    _Busy
	  )$UDINT;
#pragma pack(push, 1)
	  PdoSplit : STRUCT
	    Val1 : HSINT;
	    Val2 : HSINT;
	    Val3 : HSINT;
	    Val4 : HSINT;
	    Val5 : HSINT;
	    Val6 : HSINT;
	    Val7 : HSINT;
	    Val8 : HSINT;
	  END_STRUCT;
#pragma pack(pop)
	END_TYPE
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	Active 	: SvrCh_DINT;
	CommunicationOk 	: SvrCh_DINT;
	DriveMode 	: SvrCh_eCurtisDriveMode_PTofCls_Curtis_Base;
	EmStopOk 	: SvrCh_DINT;
	Referenced 	: SvrCh_DINT;
	InterlockFeedback 	: SvrCh_DINT;
	InterlockExternal1 	: SvrCh_DINT;
	InterlockExternal2 	: SvrCh_DINT;
	AutoAct 	: SvrCh_DINT;
	AutoSetp 	: SvrCh_DINT;
	MotorCurrent 	: SvrCh_DINT;
	BDI 	: SvrCh_DINT;
	Capacitor_Voltage 	: SvrCh_DINT;
	MotorTemperature 	: SvrCh_DINT;
	AI_ThrottlePot 	: SvrCh_DINT;
	AI_BrakePot 	: SvrCh_DINT;
	I_Switch1 	: SvrCh_DINT;
	I_Switch2 	: SvrCh_DINT;
	I_Switch3 	: SvrCh_DINT;
	I_Switch4 	: SvrCh_DINT;
	I_Switch5 	: SvrCh_DINT;
	I_Switch6 	: SvrCh_DINT;
	I_Switch7 	: SvrCh_DINT;
	I_Switch8 	: SvrCh_DINT;
	I_Driver1 	: SvrCh_DINT;
	I_Driver2 	: SvrCh_DINT;
	I_Driver3 	: SvrCh_DINT;
	I_Driver4 	: SvrCh_DINT;
	I_PropDriver 	: SvrCh_DINT;
	I_DigitalOut6 	: SvrCh_DINT;
	I_DigitalOut7 	: SvrCh_DINT;
	I_Switch16 	: SvrCh_DINT;
	MotorRPM 	: SvrCh_DINT;
	Enabled 	: SvrCh_DINT;
	ThrottlePotSigned 	: SvrCh_DINT;
	BrakePotSigned 	: SvrCh_DINT;
	DriveModeRequest 	: SvrCh_eCurtisDriveModeRequest_PTofCls_Curtis_Base;
	AutomaticSetpoint 	: SvrCh_DINT;
	AutoAccelTime 	: SvrCh_DINT;
	AutoDecelTime 	: SvrCh_DINT;
	QD_Driver1 	: SvrCh_DINT;
	QD_Driver2 	: SvrCh_DINT;
	QD_Driver3 	: SvrCh_DINT;
	QD_Driver4 	: SvrCh_DINT;
	QD_PropDriver 	: SvrCh_DINT;
	QD_DigitalOut6 	: SvrCh_DINT;
	QD_DigitalOut7 	: SvrCh_DINT;
  //Clients:
	AlarmStartId 	: CltCh_DINT;
	NodeId 	: CltCh_DINT;
	objDriver 	: CltChCmd_CanDriverBase;
	_CanOpenBaseRiwo 	: CltChCmd_CanOpenBaseRiwo;
  //Variables:
		_pdoIn1 	: PDOStr;
		_pdo1rxTime 	: UDINT;
		_pdoIn2 	: PDOStr;
		_pdo2rxTime 	: UDINT;
		_pdoIn3 	: PDOStr;
		_pdo3rxTime 	: UDINT;
		_pdoIn4 	: PDOStr;
		_pdo4rxTime 	: UDINT;
		_pdo1Out 	: PDOStr;
		_initCntr 	: DINT;
		_prevReferenced 	: DINT;
		_notReferencedStartTime 	: UDINT;
		_sendPDO1TimeStamp 	: UDINT;
		_sendPDO2TimeStamp 	: UDINT;
		_timeoutDelayStart 	: UDINT;
		_StartupDelayActive 	: BOOL;
		_tempOk 	: BOOL;
		_DriveCycleTimeOk 	: BOOL;
		_pdo1RxInterval 	: UDINT;
		_FuseBadStartTime 	: UDINT;
		_DriveModeReqStepper 	: DINT;
		_IntDriveModeReq 	: eCurtisDriveModeRequest;
		_DriveModeRequestTime 	: UDINT;
		_pObjCurtis_Universal 	: ^Curtis_Universal;
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL Init;
	
	FUNCTION VIRTUAL _split16bit
		VAR_INPUT
			Input16bit 	: INT;
			pLSB 	: ^HSINT;
			pMSB 	: ^HSINT;
		END_VAR;
	
	FUNCTION VIRTUAL _receiveData;
	
	FUNCTION VIRTUAL _to16bit
		VAR_INPUT
			LSB 	: HSINT;
			MSB 	: HSINT;
		END_VAR
		VAR_OUTPUT
			Output16bit 	: UINT;
		END_VAR;
	
	FUNCTION VIRTUAL _sendData;
	
	FUNCTION VIRTUAL _handleDriveMode;
	
	FUNCTION GLOBAL GetThis
		VAR_OUTPUT
			pObject 	: ^void;
		END_VAR;
	
	FUNCTION GLOBAL SetObjCurtis_Universal
		VAR_INPUT
			pObject 	: ^void;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using CanOpenBaseRiwo
#pragma usingLtd CanDriverBase


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB Curtis_Base::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CURTIS_BASE
0$UINT, 0$UINT, (SIZEOF(::Curtis_Base))$UINT, 
48$UINT, 4$UINT, 0$UINT, 
TO_UDINT(3229075938), "Curtis_Base", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::Curtis_Base.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::Curtis_Base.Active.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3152427908), "Active", 
(::Curtis_Base.CommunicationOk.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(481299823), "CommunicationOk", 
(::Curtis_Base.DriveMode.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1765329764), "DriveMode", 
(::Curtis_Base.EmStopOk.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1596897538), "EmStopOk", 
(::Curtis_Base.Referenced.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(391296356), "Referenced", 
(::Curtis_Base.InterlockFeedback.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2070002542), "InterlockFeedback", 
(::Curtis_Base.InterlockExternal1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2301451214), "InterlockExternal1", 
(::Curtis_Base.InterlockExternal2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(270797428), "InterlockExternal2", 
(::Curtis_Base.AutoAct.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3955062603), "AutoAct", 
(::Curtis_Base.AutoSetp.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2786162864), "AutoSetp", 
(::Curtis_Base.MotorCurrent.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1218745960), "MotorCurrent", 
(::Curtis_Base.BDI.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(390787977), "BDI", 
(::Curtis_Base.Capacitor_Voltage.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1614975653), "Capacitor_Voltage", 
(::Curtis_Base.MotorTemperature.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2032962293), "MotorTemperature", 
(::Curtis_Base.AI_ThrottlePot.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2533233576), "AI_ThrottlePot", 
(::Curtis_Base.AI_BrakePot.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1547769865), "AI_BrakePot", 
(::Curtis_Base.I_Switch1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(296148894), "I_Switch1", 
(::Curtis_Base.I_Switch2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2293206564), "I_Switch2", 
(::Curtis_Base.I_Switch3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4289248946), "I_Switch3", 
(::Curtis_Base.I_Switch4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1640770321), "I_Switch4", 
(::Curtis_Base.I_Switch5.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(382409607), "I_Switch5", 
(::Curtis_Base.I_Switch6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2411874877), "I_Switch6", 
(::Curtis_Base.I_Switch7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4173691563), "I_Switch7", 
(::Curtis_Base.I_Switch8.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1752852282), "I_Switch8", 
(::Curtis_Base.I_Driver1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(4256932495), "I_Driver1", 
(::Curtis_Base.I_Driver2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1689449269), "I_Driver2", 
(::Curtis_Base.I_Driver3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(330679203), "I_Driver3", 
(::Curtis_Base.I_Driver4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2379306496), "I_Driver4", 
(::Curtis_Base.I_PropDriver.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1541254750), "I_PropDriver", 
(::Curtis_Base.I_DigitalOut6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3312247151), "I_DigitalOut6", 
(::Curtis_Base.I_DigitalOut7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2993410553), "I_DigitalOut7", 
(::Curtis_Base.I_Switch16.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(169763464), "I_Switch16", 
(::Curtis_Base.MotorRPM.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2494551346), "MotorRPM", 
(::Curtis_Base.Enabled.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(1874609566), "Enabled", 
(::Curtis_Base.ThrottlePotSigned.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(3302280391), "ThrottlePotSigned", 
(::Curtis_Base.BrakePotSigned.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000011000$UINT, TO_UDINT(879919876), "BrakePotSigned", 
(::Curtis_Base.DriveModeRequest.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3615210698), "DriveModeRequest", 
(::Curtis_Base.AutomaticSetpoint.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1914772985), "AutomaticSetpoint", 
(::Curtis_Base.AutoAccelTime.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(3450530031), "AutoAccelTime", 
(::Curtis_Base.AutoDecelTime.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000001000$UINT, TO_UDINT(1095935015), "AutoDecelTime", 
(::Curtis_Base.QD_Driver1.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1604441206), "QD_Driver1", 
(::Curtis_Base.QD_Driver2.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3332933068), "QD_Driver2", 
(::Curtis_Base.QD_Driver3.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2981082458), "QD_Driver3", 
(::Curtis_Base.QD_Driver4.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(801841401), "QD_Driver4", 
(::Curtis_Base.QD_PropDriver.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1708114345), "QD_PropDriver", 
(::Curtis_Base.QD_DigitalOut6.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3867907263), "QD_DigitalOut6", 
(::Curtis_Base.QD_DigitalOut7.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2441913385), "QD_DigitalOut7", 
//Clients:
(::Curtis_Base.AlarmStartId.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000010$UINT, TO_UDINT(688888888), "AlarmStartId", 
(::Curtis_Base.NodeId.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000110$UINT, TO_UDINT(1813968035), "NodeId", 
(::Curtis_Base.objDriver.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000100$UINT, TO_UDINT(1019030819), "objDriver", TO_UDINT(1472885325), "CanDriverBase", 0$UINT, 7$UINT, 
(::Curtis_Base._CanOpenBaseRiwo.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(549613454), "_CanOpenBaseRiwo", TO_UDINT(1561954402), "CanOpenBaseRiwo", 0$UINT, 1$UINT, 
END_FUNCTION


#define USER_CNT_Curtis_Base 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_Curtis_Base] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION Curtis_Base::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_Curtis_Base, pCmd := #vmt.CmdTable);
	vmt.CmdTable.Init		:= #Init();
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #_split16bit();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #_receiveData();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[2]		:= #_to16bit();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[3]		:= #_sendData();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[4]		:= #_handleDriveMode();

#pragma warning (default : 74)
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	Enabled.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF Enabled.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ThrottlePotSigned.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF ThrottlePotSigned.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	BrakePotSigned.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF BrakePotSigned.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	DriveModeRequest.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF DriveModeRequest.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	AutomaticSetpoint.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF AutomaticSetpoint.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	AutoAccelTime.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF AutoAccelTime.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	AutoDecelTime.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF AutoDecelTime.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_Driver1.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_Driver1.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_Driver2.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_Driver2.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_Driver3.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_Driver3.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_Driver4.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_Driver4.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_PropDriver.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_PropDriver.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_DigitalOut6.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_DigitalOut6.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	QD_DigitalOut7.pMeth			:= StoreMethod( #M_RD_DIRECT(), #M_WR_DIRECT() );
	IF QD_DigitalOut7.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

#pragma usingLtd Curtis_Universal

//{{LSL_IMPLEMENTATION
(*****************************************************************************************
	Curtis Motor Controller CAN-OPEN driver
	****************************************************************************************
  This class cummunicates with a Curtis 1232 Motor Controller over CAN-OPEN.
  - write RPM and outputs to the Encoder and receive inputs
	****************************************************************************************
*)
FUNCTION VIRTUAL GLOBAL Curtis_Base::Init
     
  _initCntr += 1;
  
  case _initCntr of
   1:

    2:
    //** Larger than 10, get info from external classes is enabled **\\
    12:
      _timeoutDelayStart := ops.tAbsolute;
      _StartupDelayActive := TRUE;
  end_case;

END_FUNCTION

FUNCTION VIRTUAL Curtis_Base::_handleDriveMode
  
  
END_FUNCTION


FUNCTION VIRTUAL Curtis_Base::_receiveData    
  //overide

END_FUNCTION

FUNCTION VIRTUAL Curtis_Base::_sendData


END_FUNCTION
(*****************************************************************************************************)
(** _handleAlarmStates
(** function handles every specific alarm reset if allowed the allarm is set inactive
(*****************************************************************************************************)
FUNCTION VIRTUAL Curtis_Base::_split16bit
	VAR_INPUT
		Input16bit 	: INT;
		pLSB 	: ^HSINT;
		pMSB 	: ^HSINT;
	END_VAR
    
    pLSB^ := (Input16bit and 16#00FF)$hsint;
    pMSB^ := ((Input16bit and 16#FF00)shr 8)$hsint;

END_FUNCTION

FUNCTION VIRTUAL Curtis_Base::_to16bit
	VAR_INPUT
		LSB 	: HSINT;
		MSB 	: HSINT;
	END_VAR
	VAR_OUTPUT
		Output16bit 	: UINT;
	END_VAR
  
  Output16bit := (MSB shl 8) or LSB;

END_FUNCTION

FUNCTION GLOBAL Curtis_Base::GetThis
	VAR_OUTPUT
		pObject 	: ^void;
	END_VAR
  
  pObject := this ;

END_FUNCTION


FUNCTION GLOBAL Curtis_Base::SetObjCurtis_Universal
	VAR_INPUT
		pObject 	: ^void;
	END_VAR
  
  _pObjCurtis_Universal:= pObject$^Curtis_Universal ;
  

END_FUNCTION
