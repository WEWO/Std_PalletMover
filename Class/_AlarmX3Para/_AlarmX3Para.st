//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "_AlarmX3Para"
	Revision           = "0.2"
	GUID               = "{890F329C-1D1C-4CB7-9668-071D54F4F3B4}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "true"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(284,120)">
	<Channels>
		<Server
			Name           = "ClassSvr"
			Initialize     = "false"
			Visualized     = "true"
			WriteProtected = "false">
		</Server>
		<Client Name="Para1" Required="false" Internal="false"/>
		<Client Name="Para2" Required="false" Internal="false"/>
		<Client Name="Para3" Required="false" Internal="false"/>
	</Channels>
	<Network Name="_AlarmX3Para">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{FF1586E3-7510-4496-B4A8-3A308EFCD780}"
				Class      = "_AlarmX0Para"
				Position   = "(270,150)"
				Visualized = "true">
				<Channels>
					<Server Name="ClassSvr"/>
					<Client Name="Acknow"/>
					<Client Name="Config"/>
					<Client Name="Group"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ClassSvr" Destination="_base.ClassSvr" Vertices="(786,210),(614,240),"/>
			<Connection Source="_base.Config" Destination="this.Config" Vertices="(270,240),(38,210),"/>
			<Connection Source="_base.Acknow" Destination="this.Acknow" Vertices="(270,300),(38,270),"/>
			<Connection Source="_base.Group" Destination="this.Group" Vertices="(270,360),(38,330),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using _AlarmX0Para

_AlarmX3Para : CLASS
: _AlarmX0Para
  //Servers:
  //Clients:
	Para1 	: CltCh_DINT;
	Para2 	: CltCh_DINT;
	Para3 	: CltCh_DINT;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL GetParaID
		VAR_INPUT
			ppara 	: ^UDINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: UDINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL GetParaVal
		VAR_INPUT
			ppara 	: ^DINT;
		END_VAR
		VAR_OUTPUT
			retcode 	: UDINT;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

//}}LSL_DECLARATION


FUNCTION GLOBAL TAB _AlarmX3Para::@CT_
0$UINT,
2#0100000000000000$UINT, //TY__ALARMX3PARA
0$UINT, 2$UINT, (SIZEOF(::_AlarmX3Para))$UINT, 
0$UINT, 3$UINT, 0$UINT, 
TO_UDINT(1746090780), "_AlarmX3Para", //Class
TO_UDINT(800276940), "_AlarmX0Para", 0$UINT, 11$UINT, //Baseclass
//Servers:
//Clients:
(::_AlarmX3Para.Para1.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(169706286), "Para1", 
(::_AlarmX3Para.Para2.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(2467615380), "Para2", 
(::_AlarmX3Para.Para3.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000000$UINT, TO_UDINT(3826508290), "Para3", 
END_FUNCTION


#define USER_CNT__AlarmX3Para 5

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT__AlarmX3Para] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION _AlarmX3Para::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= _AlarmX0Para::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= _AlarmX0Para::ClassSvr.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, _AlarmX0Para::ClassSvr.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT__AlarmX3Para;
#pragma warning (disable : 74)
	vmt.UserFcts[0]		:= #GetParaID();

#pragma warning (default : 74)
#pragma warning (disable : 74)
	vmt.UserFcts[1]		:= #GetParaVal();

#pragma warning (default : 74)
	_AlarmX0Para::ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF _AlarmX0Para::ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


//*********************Inserted from .\_AlarmX3Para\_AlarmX3Para_00_00.st*********************



 



FUNCTION VIRTUAL GLOBAL _AlarmX3Para::GetParaID
  VAR_INPUT
    ppara		: ^UDINT;
  END_VAR
  VAR_OUTPUT
    retcode		: UDINT;
  END_VAR

  retcode := 3;

  if(IsClientConnected(#Para1) = TRUE) then
    ppara^ := (Para1.pCH)$UDINT;
  else
    ppara^ := 0;
  end_if;
  ppara += 4;
  if(IsClientConnected(#Para2) = TRUE) then
    ppara^ := (Para2.pCH)$UDINT;
  else
    ppara^ := 0;
  end_if;
  ppara += 4;
  if(IsClientConnected(#Para3) = TRUE) then
    ppara^ := (Para3.pCH)$UDINT;
  else
    ppara^ := 0;
  end_if;


END_FUNCTION
FUNCTION VIRTUAL GLOBAL _AlarmX3Para::GetParaVal
  VAR_INPUT
    ppara		: ^DINT;
  END_VAR
  VAR_OUTPUT
    retcode		: UDINT;
  END_VAR

  ppara^ := Para1.Read(); ppara += 4;
  ppara^ := Para2.Read(); ppara += 4;
  ppara^ := Para3.Read();

  retcode := 3;

END_FUNCTION
