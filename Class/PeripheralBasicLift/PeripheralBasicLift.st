//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "PeripheralBasicLift"
	Revision           = "0.0"
	GUID               = "{139E15B5-DBD6-4C64-AE6F-62286E15A829}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(870,120)">
	<Channels>
		<Server Name="ActualHeight" GUID="{F45D4904-C5A8-42D5-B756-A432F2E25495}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Ain_ActualHeight" GUID="{60C9AAAB-C86F-4EA4-AF00-D7D87F7DFBF8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Bin_MaxHeight" GUID="{FE81E5EA-96A7-4C45-B031-DE7EE8110CCB}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="Bin_MinHeight" GUID="{64FF1BE1-016F-4560-A933-16CABA4D56AF}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ClassSvr" GUID="{6876F1DF-DE2B-4098-8557-D07887BF9BA8}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SetHeight" GUID="{24619E45-6024-4DF4-BFEA-B4FBDE54E471}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="SetSpeed" GUID="{30C4A748-4731-4DBE-8C38-90882E5CA708}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="State" GUID="{EB07B014-0622-4843-9E8E-B3E75551E6CD}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ToObject" GUID="{78AA12D2-28DD-4EFC-81BF-31C0069E677B}" Class="PeripheralsBase" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false" Comment="ToObject:&#13;&#10;Object channel server.&#13;&#10;Channel to reach the methodes of this object.&#13;&#10;&#13;&#10;In case this object should be Accessible by a pointer&#13;&#10;the variable ToObject is used to handover the address of this object.&#13;&#10;&#13;&#10;This server is never used for anything else!!!&#13;&#10;&#13;&#10;&#13;&#10;"/>
		<Client Name="AgvConfig" Required="true" Internal="false"/>
		<Client Name="AgvSettings" Required="true" Internal="false"/>
		<Client Name="I_Lift" Required="true" Internal="true"/>
		<Client Name="ObjPeripheral" Required="true" Internal="true"/>
		<Client Name="op_LogData" Required="false" Internal="false" Comment="Output for logging data to SF_Logger"/>
		<Client Name="p_NextObject" Required="false" Internal="false" Comment="Pointer to next object in linked list"/>
	</Channels>
	<Separators>
		<Servers>
			<SepChn Position="6"/>
		</Servers>
	</Separators>
	<Network Name="PeripheralBasicLift">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "I_Lift"
				GUID       = "{24F86DAD-0FB5-4CE8-A045-74C7DA7B4208}"
				Class      = "I_Lift"
				Position   = "(870,180)"
				Visualized = "false">
				<Channels>
					<Server Name="ActualHeight"/>
					<Server Name="ClassSvr"/>
					<Server Name="SetHeight"/>
					<Server Name="SetSpeed"/>
					<Server Name="State"/>
				</Channels>
			</Object>
			<Object
				Name       = "ObjPeripheral"
				GUID       = "{DAE3F1AC-6FEF-473E-9033-1A2AE91A5E4A}"
				Class      = "PeripheralsBase"
				Position   = "(120,180)"
				Visualized = "false">
				<Channels>
					<Server Name="ToObject"/>
					<Client Name="op_LogData"/>
					<Client Name="p_NextObject"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ObjPeripheral" Destination="ObjPeripheral.ToObject"/>
			<Connection Source="this.I_Lift" Destination="I_Lift.ClassSvr"/>
			<Connection Source="this.ActualHeight" Destination="I_Lift.ActualHeight" Vertices="(1958,330),(1786,330),"/>
			<Connection Source="this.SetHeight" Destination="I_Lift.SetHeight" Vertices="(1958,390),(1786,390),"/>
			<Connection Source="this.SetSpeed" Destination="I_Lift.SetSpeed" Vertices="(1958,450),(1786,450),"/>
			<Connection Source="this.State" Destination="I_Lift.State" Vertices="(1958,510),(1786,510),"/>
			<Connection Source="ObjPeripheral.p_NextObject" Destination="this.p_NextObject" Vertices="(120,330),(38,330),"/>
			<Connection Source="ObjPeripheral.op_LogData" Destination="this.op_LogData" Vertices="(120,270),(30,420),(38,390),"/>
			<Connection Source="this.ToObject" Destination="ObjPeripheral.ToObject" Vertices="(1958,270),(706,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
PeripheralBasicLift : CLASS
  //Servers:
	ClassSvr 	: SvrChCmd_DINT;
	ToObject 	: SvrChCmd_pVoid;
	ActualHeight 	: SvrCh_DINT;
	SetHeight 	: SvrCh_DINT;
	SetSpeed 	: SvrCh_DINT;
	State 	: SvrCh_LiftState_PTofCls_I_Lift;
	Ain_ActualHeight 	: SvrCh_DINT;
	Bin_MaxHeight 	: SvrCh_DINT;
	Bin_MinHeight 	: SvrCh_DINT;
  //Clients:
	ObjPeripheral 	: CltChCmd_PeripheralsBase;
	I_Lift 	: CltChCmd_I_Lift;
	AgvConfig 	: CltChCmd_AgvConfig;
	AgvSettings 	: CltChCmd_AgvSettings;
	p_NextObject 	: CltChCmd_LinkedObjectBase;
	op_LogData 	: CltCh_gpt_LogData;
  //Variables:
  //Functions:
	
	FUNCTION VIRTUAL GLOBAL ToObject::Read
		VAR_OUTPUT
			output (EAX) 	: pVoid;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL ActualHeight::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SetHeight::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL SetSpeed::Read
		VAR_OUTPUT
			output (EAX) 	: DINT;
		END_VAR;
	
	FUNCTION VIRTUAL GLOBAL State::Read
		VAR_OUTPUT
			output (EAX) 	: I_Lift::LiftState;
		END_VAR;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma using I_Lift
#pragma using PeripheralsBase
#pragma usingLtd AgvConfig
#pragma usingLtd AgvSettings
#pragma usingLtd LinkedObjectBase


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB PeripheralBasicLift::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_PERIPHERALBASICLIFT
0$UINT, 0$UINT, (SIZEOF(::PeripheralBasicLift))$UINT, 
9$UINT, 6$UINT, 0$UINT, 
TO_UDINT(4228259390), "PeripheralBasicLift", //Class
TO_UDINT(0), 0, 0$UINT, 0$UINT, //Baseclass
//Servers:
(::PeripheralBasicLift.ClassSvr.pMeth)$UINT, _CH_CMD$UINT, 2#0000000000000000$UINT, TO_UDINT(619352855), "ClassSvr", 
(::PeripheralBasicLift.ToObject.pMeth)$UINT, _CH_SVR_OBJ$UINT, 2#0000000000000000$UINT, TO_UDINT(4019907084), "ToObject", 
(::PeripheralBasicLift.ActualHeight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3311943233), "ActualHeight", 
(::PeripheralBasicLift.SetHeight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(2940660506), "SetHeight", 
(::PeripheralBasicLift.SetSpeed.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(33026088), "SetSpeed", 
(::PeripheralBasicLift.State.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1422331979), "State", 
(::PeripheralBasicLift.Ain_ActualHeight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3393321015), "Ain_ActualHeight", 
(::PeripheralBasicLift.Bin_MaxHeight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(3723035382), "Bin_MaxHeight", 
(::PeripheralBasicLift.Bin_MinHeight.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(167948471), "Bin_MinHeight", 
//Clients:
(::PeripheralBasicLift.ObjPeripheral.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2806010968), "ObjPeripheral", TO_UDINT(480875673), "PeripheralsBase", 0$UINT, 0$UINT, 
(::PeripheralBasicLift.I_Lift.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1199214265), "I_Lift", TO_UDINT(1199214265), "I_Lift", 0$UINT, 0$UINT, 
(::PeripheralBasicLift.AgvConfig.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(3641531850), "AgvConfig", TO_UDINT(3641531850), "AgvConfig", 0$UINT, 0$UINT, 
(::PeripheralBasicLift.AgvSettings.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1195094022), "AgvSettings", TO_UDINT(1195094022), "AgvSettings", 0$UINT, 0$UINT, 
(::PeripheralBasicLift.p_NextObject.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000100$UINT, TO_UDINT(5254340), "p_NextObject", TO_UDINT(1708657366), "LinkedObjectBase", 0$UINT, 10$UINT, 
(::PeripheralBasicLift.op_LogData.pCh)$UINT, _CH_CLT_DATA$UINT, 2#0000000000000100$UINT, TO_UDINT(1597732449), "op_LogData", 
END_FUNCTION


#define USER_CNT_PeripheralBasicLift 0

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_PeripheralBasicLift] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION PeripheralBasicLift::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
	END_VAR

	//Command Methods
	InitCmdTable (nCmd := nSTDCMD + USER_CNT_PeripheralBasicLift, pCmd := #vmt.CmdTable);
	ClassSvr.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ClassSvr.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	_memcpy((#vmt.CmdTable)$^USINT, ToObject.pMeth, SIZEOF(CMDMETH));
	vmt.CmdTable.nCmds		:= nSTDCMD;
	vmt.CmdTable.Read		:= #ToObject::Read();
	ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	ActualHeight.pMeth			:= StoreMethod( #ActualHeight::Read(), #M_NO_F() );
	IF ActualHeight.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SetHeight.pMeth			:= StoreMethod( #SetHeight::Read(), #M_NO_F() );
	IF SetHeight.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	SetSpeed.pMeth			:= StoreMethod( #SetSpeed::Read(), #M_NO_F() );
	IF SetSpeed.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;
	State.pMeth			:= StoreMethod( #State::Read(), #M_NO_F() );
	IF State.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION VIRTUAL GLOBAL PeripheralBasicLift::ActualHeight::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	ActualHeight := I_Lift.ActualHeight.Read();
	output := ActualHeight;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL PeripheralBasicLift::SetHeight::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	SetHeight := I_Lift.SetHeight.Read();
	output := SetHeight;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL PeripheralBasicLift::SetSpeed::Read
	VAR_OUTPUT
		output (EAX) 	: DINT;
	END_VAR

	SetSpeed := I_Lift.SetSpeed.Read();
	output := SetSpeed;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL PeripheralBasicLift::State::Read
	VAR_OUTPUT
		output (EAX) 	: I_Lift::LiftState;
	END_VAR

	State := I_Lift.State.Read();
	output := State;

END_FUNCTION


FUNCTION VIRTUAL GLOBAL PeripheralBasicLift::ToObject::Read
	VAR_OUTPUT
		output (EAX) 	: pVoid;
	END_VAR

	ToObject := ObjPeripheral.ToObject.Read();
	output := ToObject;

END_FUNCTION
