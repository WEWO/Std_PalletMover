//This file was generated by the LASAL2 CodeGenerator  -- 
//Please, do not edit this file (it might be overwritten by the next generator run)
//{{LSL_DECLARATION

(*!
<Class
	Name               = "CntrlAuxHmi"
	Revision           = "0.0"
	GUID               = "{A5CB32C1-FA45-4C85-AEBB-16EEFCB68973}"
	RealtimeTask       = "false"
	CyclicTask         = "false"
	BackgroundTask     = "false"
	Sigmatek           = "false"
	OSInterface        = "false"
	HighPriority       = "false"
	Automatic          = "false"
	UpdateMode         = "Prescan"
	SharedCommandTable = "true"
	Objectsize         = "(960,120)">
	<Channels>
		<Server Name="AgvState" GUID="{C11A4AF1-ED7C-4D6C-9242-D8DE213B1A0C}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Server Name="ErrorMessage" GUID="{D4887AF8-C9B5-426C-ABE7-CA76C8162486}" Visualized="false" Initialize="false" WriteProtected="true" Retentive="false"/>
		<Client Name="ToConfiguration" Required="true" Internal="false"/>
		<Client Name="ToMqttInterface" Required="true" Internal="false"/>
		<Client Name="ToSettings" Required="true" Internal="false"/>
	</Channels>
	<Network Name="CntrlAuxHmi">
		<!-- List of Components in this network -->
		<Components>
			<Object
				Name       = "_base"
				GUID       = "{ACD34547-3169-46EE-A3D4-B5CADCE0B3AF}"
				Class      = "AuxBase"
				Position   = "(218,120)"
				Visualized = "false">
				<Channels>
					<Server Name="ToObject"/>
					<Client Name="op_LogData"/>
					<Client Name="p_NextObject"/>
				</Channels>
			</Object>
		</Components>
		<Comments>
		</Comments>
		<!-- List of Connections in this network -->
		<Connections>
			<Connection Source="this.ToObject" Destination="_base.ToObject" Vertices="(976,210),(804,210),"/>
			<Connection Source="_base.op_LogData" Destination="this.op_LogData" Vertices="(218,210),(38,210),"/>
			<Connection Source="_base.p_NextObject" Destination="this.p_NextObject" Vertices="(218,270),(38,270),"/>
		</Connections>
		<!-- Headerfiles -->
		<Options>
		</Options>
	</Network>
</Class>
*)
#pragma using AuxBase

CntrlAuxHmi : CLASS
: AuxBase
  //Servers:
	ErrorMessage 	: SvrCh_DINT;
	AgvState 	: SvrCh_DINT;
  //Clients:
	ToConfiguration 	: CltChCmd_AgvConfig;
	ToSettings 	: CltChCmd_AgvSettings;
	ToMqttInterface 	: CltChCmd_MqttInterface;
  //Variables:
  //Functions:
	
	FUNCTION GetDataFromMqttchanel;
  //Tables:
	FUNCTION @STD
		VAR_OUTPUT
			ret_code	: CONFSTATES;
		END_VAR;
	FUNCTION GLOBAL TAB @CT_;
END_CLASS;

#pragma usingLtd AgvConfig
#pragma usingLtd AgvSettings
#pragma usingLtd MqttInterface


//}}LSL_DECLARATION


FUNCTION GLOBAL TAB CntrlAuxHmi::@CT_
0$UINT,
2#0100000000000010$UINT, //TY_CNTRLAUXHMI
0$UINT, 0$UINT, (SIZEOF(::CntrlAuxHmi))$UINT, 
2$UINT, 3$UINT, 0$UINT, 
TO_UDINT(291023078), "CntrlAuxHmi", //Class
TO_UDINT(4233457716), "AuxBase", 0$UINT, 0$UINT, //Baseclass
//Servers:
(::CntrlAuxHmi.ErrorMessage.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1285168489), "ErrorMessage", 
(::CntrlAuxHmi.AgvState.pMeth)$UINT, _CH_SVR$UINT, 2#0000000000000000$UINT, TO_UDINT(1233869393), "AgvState", 
//Clients:
(::CntrlAuxHmi.ToConfiguration.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(1220616193), "ToConfiguration", TO_UDINT(3641531850), "AgvConfig", 0$UINT, 0$UINT, 
(::CntrlAuxHmi.ToSettings.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(336224626), "ToSettings", TO_UDINT(1195094022), "AgvSettings", 0$UINT, 0$UINT, 
(::CntrlAuxHmi.ToMqttInterface.pCh)$UINT, _CH_CLT_OBJ$UINT, 2#0000000000000010$UINT, TO_UDINT(2009286671), "ToMqttInterface", TO_UDINT(3165441852), "MqttInterface", 0$UINT, 0$UINT, 
END_FUNCTION


#define USER_CNT_CntrlAuxHmi 19

TYPE
	_LSL_STD_VMETH	: STRUCT
			CmdTable	: CMDMETH;
			UserFcts	: ARRAY[0..USER_CNT_CntrlAuxHmi] OF ^Void;
	END_STRUCT;
END_TYPE

FUNCTION CntrlAuxHmi::@STD
	VAR_OUTPUT
		ret_code	: CONFSTATES;
	END_VAR
	VAR
		vmt	: _LSL_STD_VMETH;
		nCmdSize	: UINT;
	END_VAR

	ret_code	:= AuxBase::@STD();
	IF ret_code <> C_OK THEN
		RETURN;
	END_IF;
	nCmdSize		:= WewoBase::ToObject.pMeth^.nCmds$UINT*SIZEOF(pVoid) + CMDMETH.Init;

	_memcpy((#vmt.CmdTable)$^USINT, WewoBase::ToObject.pMeth, nCmdSize);
	vmt.CmdTable.nCmds		:= nSTDCMD + USER_CNT_CntrlAuxHmi;
	WewoBase::ToObject.pMeth		:= StoreCmd (pCmd := #vmt.CmdTable, SHARED);

	IF WewoBase::ToObject.pMeth THEN
		ret_code	:= C_OK;
	ELSE
		ret_code	:= C_OUTOF_NEAR;
		RETURN;
	END_IF;

END_FUNCTION

//{{LSL_IMPLEMENTATION


FUNCTION CntrlAuxHmi::GetDataFromMqttchanel


END_FUNCTION
